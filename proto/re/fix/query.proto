syntax = "proto3";

package re.fix;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "re/fix/params.proto";
import "re/fix/sessions.proto";
import "re/fix/session_reject.proto";
import "re/fix/session_logout.proto";
import "re/fix/orders.proto";
import "re/fix/orders_cancel_request.proto";
import "re/fix/orders_cancel_reject.proto";
import "re/fix/orders_execution_report.proto";
import "re/fix/quote.proto";
import "re/fix/trade_capture.proto";
import "re/fix/market_data.proto";
import "re/fix/security.proto";
import "re/fix/order_mass_status.proto";
import "re/fix/trading_session.proto";
import "re/fix/trading_session_list.proto";
import "re/fix/security_list.proto";
import "re/fix/security_status.proto";
import "re/fix/security_types.proto";
import "re/fix/account_registration.proto";

option go_package = "github.com/jim380/Re/x/fix/types";

// Query defines the gRPC querier service.
service Query {

  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/jim380/Re/fix/params";
  }

  // Queries a list of Sessions items.
  rpc Sessions(QueryGetSessionsRequest) returns (QueryGetSessionsResponse) {
    option (google.api.http).get =
        "/jim380/Re/fix/sessions/{chainID}/{sessionID}";
  }
  rpc SessionsAll(QueryAllSessionsRequest) returns (QueryAllSessionsResponse) {
    option (google.api.http).get = "/jim380/Re/fix/sessions/{chainID}";
  }

  // Queries a list of SessionReject items.
  rpc SessionReject(QueryGetSessionRejectRequest)
      returns (QueryGetSessionRejectResponse) {
    option (google.api.http).get =
        "/jim380/Re/fix/session/reject/{chainID}/{sessionID}";
  }
  rpc SessionRejectAll(QueryAllSessionRejectRequest)
      returns (QueryAllSessionRejectResponse) {
    option (google.api.http).get = "/jim380/Re/fix/session/rejects/{chainID}";
  }

  // Queries a list of SessionLogout items.
  rpc SessionLogout(QueryGetSessionLogoutRequest)
      returns (QueryGetSessionLogoutResponse) {
    option (google.api.http).get =
        "/jim380/Re/fix/session/logout/{chainID}/{sessionID}";
  }
  rpc SessionLogoutAll(QueryAllSessionLogoutRequest)
      returns (QueryAllSessionLogoutResponse) {
    option (google.api.http).get = "/jim380/Re/fix/session/logouts/{chainID}";
  }

  // Queries a list of Orders items.
  rpc Orders(QueryGetOrdersRequest) returns (QueryGetOrdersResponse) {
    option (google.api.http).get = "/jim380/Re/fix/order/{chainID}/{clOrdID}";
  }
  rpc OrdersByAddress(QueryGetOrdersByAddressRequest)
      returns (QueryGetOrdersByAddressResponse) {
    option (google.api.http).get = "/jim380/Re/fix/orders/{chainID}/{address}";
  }
  rpc OrdersAll(QueryAllOrdersRequest) returns (QueryAllOrdersResponse) {
    option (google.api.http).get = "/jim380/Re/fix/orders/{chainID}";
  }

  // Queries a list of OrdersCancelRequest items.
  rpc OrdersCancelRequest(QueryGetOrdersCancelRequestRequest)
      returns (QueryGetOrdersCancelRequestResponse) {
    option (google.api.http).get =
        "/jim380/Re/fix/orders/cancel/request/{chainID}/{clOrdID}";
  }
  rpc OrdersCancelRequestAll(QueryAllOrdersCancelRequestRequest)
      returns (QueryAllOrdersCancelRequestResponse) {
    option (google.api.http).get =
        "/jim380/Re/fix/orders/cancel/requests/{chainID}";
  }

  // Queries a list of OrdersCancelReject items.
  rpc OrdersCancelReject(QueryGetOrdersCancelRejectRequest)
      returns (QueryGetOrdersCancelRejectResponse) {
    option (google.api.http).get =
        "/jim380/Re/fix/orders/cancel/reject/{chainID}/{clOrdID}";
  }
  rpc OrdersCancelRejectAll(QueryAllOrdersCancelRejectRequest)
      returns (QueryAllOrdersCancelRejectResponse) {
    option (google.api.http).get =
        "/jim380/Re/fix/orders/cancel/rejects/{chainID}";
  }

  // Queries a list of OrdersExecutionReport items.
  rpc OrdersExecutionReport(QueryGetOrdersExecutionReportRequest)
      returns (QueryGetOrdersExecutionReportResponse) {
    option (google.api.http).get =
        "/jim380/Re/fix/orders/execution/report/{chainID}/{clOrdID}";
  }
  rpc OrdersExecutionReportByAddress(
      QueryGetOrdersExecutionReportByAddressRequest)
      returns (QueryGetOrdersExecutionReportByAddressResponse) {
    option (google.api.http).get =
        "/jim380/Re/fix/orders/execution/reports/{chainID}/{address}";
  }
  rpc OrdersExecutionReportAll(QueryAllOrdersExecutionReportRequest)
      returns (QueryAllOrdersExecutionReportResponse) {
    option (google.api.http).get =
        "/jim380/Re/fix/orders/execution/reports/{chainID}";
  }

  // Queries a list of Quote items.
  rpc Quote(QueryGetQuoteRequest) returns (QueryGetQuoteResponse) {
    option (google.api.http).get =
        "/jim380/Re/fix/quote/{chainID}/{quoteReqID}";
  }
  rpc QuotesBySessionID(QuerySessionByIDQuoteRequest)
      returns (QuerySessionByIDQuoteResponse) {
    option (google.api.http).get = "/jim380/Re/fix/quote/{chainID}/{sessionID}";
  }
  rpc QuoteAll(QueryAllQuoteRequest) returns (QueryAllQuoteResponse) {
    option (google.api.http).get = "/jim380/Re/fix/quotes/{chainID}";
  }

  // Queries a list of TradeCapture items.
  rpc TradeCapture(QueryGetTradeCaptureRequest)
      returns (QueryGetTradeCaptureResponse) {
    option (google.api.http).get =
        "/jim380/Re/fix/trade/capture/{chainID}/{tradeReportID}";
  }
  rpc TradeCaptureAll(QueryAllTradeCaptureRequest)
      returns (QueryAllTradeCaptureResponse) {
    option (google.api.http).get = "/jim380/Re/fix/trade/captures/{chainID}";
  }

  // Queries a list of MarketData items.
  rpc MarketData(QueryGetMarketDataRequest)
      returns (QueryGetMarketDataResponse) {
    option (google.api.http).get =
        "/jim380/Re/fix/market/data/{chainID}/{mdReqID}";
  }
  rpc MarketDataAll(QueryAllMarketDataRequest)
      returns (QueryAllMarketDataResponse) {
    option (google.api.http).get = "/jim380/Re/fix/market/data/{chainID}";
  }

  // Queries a list of Security items.
  rpc Security(QueryGetSecurityRequest) returns (QueryGetSecurityResponse) {
    option (google.api.http).get =
        "/jim380/Re/fix/security/definition/{chainID}/{securityReqID}";
  }
  rpc SecurityAll(QueryAllSecurityRequest) returns (QueryAllSecurityResponse) {
    option (google.api.http).get =
        "/jim380/Re/fix/security/definition/{chainID}";
  }

  // Queries a list of OrderMassStatus items.
  rpc OrderMassStatus(QueryGetOrderMassStatusRequest)
      returns (QueryGetOrderMassStatusResponse) {
    option (google.api.http).get =
        "/jim380/Re/fix/order/mass/status/{chainID}/{massStatusReqID}";
  }
  rpc OrderMassStatusAll(QueryAllOrderMassStatusRequest)
      returns (QueryAllOrderMassStatusResponse) {
    option (google.api.http).get = "/jim380/Re/fix/order/mass/status/{chainID}";
  }

  // Queries a list of TradingSession items.
  rpc TradingSession(QueryGetTradingSessionRequest)
      returns (QueryGetTradingSessionResponse) {
    option (google.api.http).get =
        "/jim380/Re/fix/trading/session/{chainID}/{tradSesReqID}";
  }
  rpc TradingSessionAll(QueryAllTradingSessionRequest)
      returns (QueryAllTradingSessionResponse) {
    option (google.api.http).get = "/jim380/Re/fix/trading/session/{chainID}";
  }

  // Queries a list of TradingSessionList items.
  rpc TradingSessionList(QueryGetTradingSessionListRequest)
      returns (QueryGetTradingSessionListResponse) {
    option (google.api.http).get =
        "/jim380/Re/fix/trading/session/list/{chainID}/{tradSesReqID}";
  }
  rpc TradingSessionListAll(QueryAllTradingSessionListRequest)
      returns (QueryAllTradingSessionListResponse) {
    option (google.api.http).get =
        "/jim380/Re/fix/trading/session/list/{chainID}";
  }

  // Queries a list of SecurityList items.
  rpc SecurityList(QueryGetSecurityListRequest)
      returns (QueryGetSecurityListResponse) {
    option (google.api.http).get =
        "/jim380/Re/fix/security/list/{chainID}/{securityReqID}";
  }
  rpc SecurityListAll(QueryAllSecurityListRequest)
      returns (QueryAllSecurityListResponse) {
    option (google.api.http).get = "/jim380/Re/fix/security/list/{chainID}";
  }

  // Queries a list of SecurityStatus items.
  rpc SecurityStatus(QueryGetSecurityStatusRequest)
      returns (QueryGetSecurityStatusResponse) {
    option (google.api.http).get =
        "/jim380/Re/fix/security/status/{chainID}/{securityStatusReqID}";
  }
  rpc SecurityStatusAll(QueryAllSecurityStatusRequest)
      returns (QueryAllSecurityStatusResponse) {
    option (google.api.http).get = "/jim380/Re/fix/security/status/{chainID}";
  }

  // Queries a list of SecurityTypes items.
  rpc SecurityTypes(QueryGetSecurityTypesRequest)
      returns (QueryGetSecurityTypesResponse) {
    option (google.api.http).get =
        "/jim380/Re/fix/security/types/{chainID}/{securityReqID}";
  }
  rpc SecurityTypesAll(QueryAllSecurityTypesRequest)
      returns (QueryAllSecurityTypesResponse) {
    option (google.api.http).get = "/jim380/Re/fix/security/types/{chainID}";
  }

  // Queries a list of AccountRegistration items.
  rpc AccountRegistration(QueryGetAccountRegistrationRequest)
      returns (QueryGetAccountRegistrationResponse) {
    option (google.api.http).get =
        "/jim380/Re/fix/account/registration/{address}";
  }
  rpc AccountRegistrationAll(QueryAllAccountRegistrationRequest)
      returns (QueryAllAccountRegistrationResponse) {
    option (google.api.http).get =
        "/jim380/Re/fix/account/registrations";
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {

  // params holds all the parameters of this module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

message QueryGetSessionsRequest {
  string sessionID = 1;
  string chainID = 2;
}

message QueryGetSessionsResponse {
  Sessions Sessions = 1 [ (gogoproto.nullable) = false ];
}

message QueryAllSessionsRequest {
  string chainID = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAllSessionsResponse {
  repeated Sessions Sessions = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetSessionRejectRequest {
  string sessionID = 1;
  string chainID = 2;
}

message QueryGetSessionRejectResponse {
  SessionReject SessionReject = 1 [ (gogoproto.nullable) = false ];
}

message QueryAllSessionRejectRequest {
  string chainID = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAllSessionRejectResponse {
  repeated SessionReject SessionReject = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetSessionLogoutRequest {
  string sessionID = 1;
  string chainID = 2;
}

message QueryGetSessionLogoutResponse {
  SessionLogout SessionLogout = 1 [ (gogoproto.nullable) = false ];
}

message QueryAllSessionLogoutRequest {
  string chainID = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAllSessionLogoutResponse {
  repeated SessionLogout SessionLogout = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetOrdersRequest {
  string clOrdID = 1;
  string chainID = 2;
}

message QueryGetOrdersResponse {
  Orders Orders = 1 [ (gogoproto.nullable) = false ];
}

message QueryGetOrdersByAddressRequest {
  string address = 1;
  string chainID = 2;
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

message QueryGetOrdersByAddressResponse {
  repeated Orders Orders = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryAllOrdersRequest {
  string chainID = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAllOrdersResponse {
  repeated Orders Orders = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetOrdersCancelRequestRequest {
  string clOrdID = 1;
  string chainID = 2;
}

message QueryGetOrdersCancelRequestResponse {
  OrdersCancelRequest OrdersCancelRequest = 1 [ (gogoproto.nullable) = false ];
}

message QueryAllOrdersCancelRequestRequest {
  string chainID = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAllOrdersCancelRequestResponse {
  repeated OrdersCancelRequest OrdersCancelRequest = 1
      [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetOrdersCancelRejectRequest {
  string clOrdID = 1;
  string chainID = 2;
}

message QueryGetOrdersCancelRejectResponse {
  OrdersCancelReject OrdersCancelReject = 1 [ (gogoproto.nullable) = false ];
}

message QueryAllOrdersCancelRejectRequest {
  string chainID = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAllOrdersCancelRejectResponse {
  repeated OrdersCancelReject OrdersCancelReject = 1
      [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetOrdersExecutionReportRequest {
  string clOrdID = 1;
  string chainID = 2;
}

message QueryGetOrdersExecutionReportResponse {
  OrdersExecutionReport OrdersExecutionReport = 1
      [ (gogoproto.nullable) = false ];
}

message QueryGetOrdersExecutionReportByAddressRequest {
  string address = 1;
  string chainID = 2;
  cosmos.base.query.v1beta1.PageRequest pagination = 3;
}

message QueryGetOrdersExecutionReportByAddressResponse {
  repeated OrdersExecutionReport OrdersExecutionReport = 1
      [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryAllOrdersExecutionReportRequest {
  string chainID = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAllOrdersExecutionReportResponse {
  repeated OrdersExecutionReport OrdersExecutionReport = 1
      [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetQuoteRequest {
  string quoteReqID = 1;
  string chainID = 2;
}

message QueryGetQuoteResponse {
  Quote Quote = 1 [ (gogoproto.nullable) = false ];
}

// get Quotes by SessionID
message QuerySessionByIDQuoteRequest {
  string sessionID = 1;
  string chainID = 2;
}

// get Quotes Response by sessionID
message QuerySessionByIDQuoteResponse {
  repeated Quote Quote = 1 [ (gogoproto.nullable) = false ];
}

message QueryAllQuoteRequest {
  string chainID = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAllQuoteResponse {
  repeated Quote Quote = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetTradeCaptureRequest {
  string tradeReportID = 1;
  string chainID = 2;
}

message QueryGetTradeCaptureResponse {
  TradeCapture TradeCapture = 1 [ (gogoproto.nullable) = false ];
}

message QueryAllTradeCaptureRequest {
  string chainID = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAllTradeCaptureResponse {
  repeated TradeCapture TradeCapture = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetMarketDataRequest {
  string mdReqID = 1;
  string chainID = 2;
}

message QueryGetMarketDataResponse {
  MarketData MarketData = 1 [ (gogoproto.nullable) = false ];
}

message QueryAllMarketDataRequest {
  string chainID = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAllMarketDataResponse {
  repeated MarketData MarketData = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetSecurityRequest {
  string securityReqID = 1;
  string chainID = 2;
}

message QueryGetSecurityResponse {
  Security Security = 1 [ (gogoproto.nullable) = false ];
}

message QueryAllSecurityRequest {
  string chainID = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAllSecurityResponse {
  repeated Security Security = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetOrderMassStatusRequest {
  string massStatusReqID = 1;
  string chainID = 2;
}

message QueryGetOrderMassStatusResponse {
  OrderMassStatus OrderMassStatus = 1 [ (gogoproto.nullable) = false ];
}

message QueryAllOrderMassStatusRequest {
  string chainID = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAllOrderMassStatusResponse {
  repeated OrderMassStatus OrderMassStatus = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetTradingSessionRequest {
  string tradSesReqID = 1;
  string chainID = 2;
}

message QueryGetTradingSessionResponse {
  TradingSession TradingSession = 1 [ (gogoproto.nullable) = false ];
}

message QueryAllTradingSessionRequest {
  string chainID = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAllTradingSessionResponse {
  repeated TradingSession TradingSession = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetTradingSessionListRequest {
  string tradSesReqID = 1;
  string chainID = 2;
}

message QueryGetTradingSessionListResponse {
  TradingSessionList TradingSessionList = 1 [ (gogoproto.nullable) = false ];
}

message QueryAllTradingSessionListRequest {
  string chainID = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAllTradingSessionListResponse {
  repeated TradingSessionList TradingSessionList = 1
      [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetSecurityListRequest {
  string securityReqID = 1;
  string chainID = 2;
}

message QueryGetSecurityListResponse {
  SecurityList SecurityList = 1 [ (gogoproto.nullable) = false ];
}

message QueryAllSecurityListRequest {
  string chainID = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAllSecurityListResponse {
  repeated SecurityList SecurityList = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetSecurityStatusRequest {
  string securityStatusReqID = 1;
  string chainID = 2;
}

message QueryGetSecurityStatusResponse {
  SecurityStatus SecurityStatus = 1 [ (gogoproto.nullable) = false ];
}

message QueryAllSecurityStatusRequest {
  string chainID = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAllSecurityStatusResponse {
  repeated SecurityStatus SecurityStatus = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetSecurityTypesRequest {
  string securityReqID = 1;
  string chainID = 2;
}

message QueryGetSecurityTypesResponse {
  SecurityTypes SecurityTypes = 1 [ (gogoproto.nullable) = false ];
}

message QueryAllSecurityTypesRequest {
  string chainID = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryAllSecurityTypesResponse {
  repeated SecurityTypes SecurityTypes = 1 [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetAccountRegistrationRequest {
  string address = 1;
}

message QueryGetAccountRegistrationResponse {
  AccountRegistration AccountRegistration = 1 [ (gogoproto.nullable) = false ];
}

message QueryAllAccountRegistrationRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAccountRegistrationResponse {
  repeated AccountRegistration AccountRegistration = 1
      [ (gogoproto.nullable) = false ];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

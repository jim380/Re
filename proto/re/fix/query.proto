syntax = "proto3";

package jim380.re.fix;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "re/fix/params.proto";
import "re/fix/account.proto";
import "re/fix/sessions.proto";
import "re/fix/session_reject.proto";
import "re/fix/session_logout.proto";
import "re/fix/orders.proto";
import "re/fix/orders_cancel_request.proto";
import "re/fix/orders_cancel_reject.proto";
import "re/fix/orders_execution_report.proto";
import "re/fix/quote.proto";
import "re/fix/trade_capture.proto";
import "re/fix/market_data.proto";
import "re/fix/security.proto";

option go_package = "github.com/jim380/Re/x/fix/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/jim380/Re/fix/params";
  
  }
  
  // Queries a list of Account items.
  rpc Account    (QueryGetAccountRequest) returns (QueryGetAccountResponse) {
    option (google.api.http).get = "/jim380/Re/fix/account/{did}";
  
  }
  rpc AccountAll (QueryAllAccountRequest) returns (QueryAllAccountResponse) {
    option (google.api.http).get = "/jim380/Re/fix/account";
  
  }
  
  // Queries a list of Sessions items.
  rpc Sessions    (QueryGetSessionsRequest) returns (QueryGetSessionsResponse) {
    option (google.api.http).get = "/jim380/Re/fix/sessions/{sessionID}";
  
  }
  rpc SessionsAll (QueryAllSessionsRequest) returns (QueryAllSessionsResponse) {
    option (google.api.http).get = "/jim380/Re/fix/sessions";
  
  }
  
  // Queries a list of SessionReject items.
  rpc SessionReject    (QueryGetSessionRejectRequest) returns (QueryGetSessionRejectResponse) {
    option (google.api.http).get = "/jim380/Re/fix/session/reject/{sessionID}";
  
  }
  rpc SessionRejectAll (QueryAllSessionRejectRequest) returns (QueryAllSessionRejectResponse) {
    option (google.api.http).get = "/jim380/Re/fix/session/rejects";
  
  }
  
  // Queries a list of SessionLogout items.
  rpc SessionLogout    (QueryGetSessionLogoutRequest) returns (QueryGetSessionLogoutResponse) {
    option (google.api.http).get = "/jim380/Re/fix/session/logout/{sessionID}";
  
  }
  rpc SessionLogoutAll (QueryAllSessionLogoutRequest) returns (QueryAllSessionLogoutResponse) {
    option (google.api.http).get = "/jim380/Re/fix/session/logouts";
  
  }
  
  // Queries a list of Orders items.
  rpc Orders    (QueryGetOrdersRequest) returns (QueryGetOrdersResponse) {
    option (google.api.http).get = "/jim380/Re/fix/orders/{sessionID}";
  
  }
  rpc OrdersAll (QueryAllOrdersRequest) returns (QueryAllOrdersResponse) {
    option (google.api.http).get = "/jim380/Re/fix/orders";
  
  }
  
  // Queries a list of OrdersCancelRequest items.
  rpc OrdersCancelRequest    (QueryGetOrdersCancelRequestRequest) returns (QueryGetOrdersCancelRequestResponse) {
    option (google.api.http).get = "/jim380/Re/fix/orders_cancel_request/{sessionID}";
  
  }
  rpc OrdersCancelRequestAll (QueryAllOrdersCancelRequestRequest) returns (QueryAllOrdersCancelRequestResponse) {
    option (google.api.http).get = "/jim380/Re/fix/orders_cancel_requests";
  
  }
  
  // Queries a list of OrdersCancelReject items.
  rpc OrdersCancelReject    (QueryGetOrdersCancelRejectRequest) returns (QueryGetOrdersCancelRejectResponse) {
    option (google.api.http).get = "/jim380/Re/fix/orders_cancel_reject/{sessionID}";
  
  }
  rpc OrdersCancelRejectAll (QueryAllOrdersCancelRejectRequest) returns (QueryAllOrdersCancelRejectResponse) {
    option (google.api.http).get = "/jim380/Re/fix/orders_cancel_rejects";
  
  }
  
  // Queries a list of OrdersExecutionReport items.
  rpc OrdersExecutionReport    (QueryGetOrdersExecutionReportRequest) returns (QueryGetOrdersExecutionReportResponse) {
    option (google.api.http).get = "/jim380/Re/fix/orders_execution_report/{sessionID}";
  
  }
  rpc OrdersExecutionReportAll (QueryAllOrdersExecutionReportRequest) returns (QueryAllOrdersExecutionReportResponse) {
    option (google.api.http).get = "/jim380/Re/fix/orders_execution_reports";
  
  }
  
  // Queries a list of Quote items.
  rpc Quote             (QueryGetQuoteRequest        ) returns (QueryGetQuoteResponse        ) {
    option (google.api.http).get = "/jim380/Re/fix/quote/{quoteReqID}";
  
  }
  rpc QuotesBySessionID (QuerySessionByIDQuoteRequest) returns (QuerySessionByIDQuoteResponse) {
    option (google.api.http).get = "/jim380/Re/fix/quote/{sessionID}";
  
  }
  rpc QuoteAll          (QueryAllQuoteRequest        ) returns (QueryAllQuoteResponse        ) {
    option (google.api.http).get = "/jim380/Re/fix/quotes";
  
  }
  
  // Queries a list of TradeCapture items.
  rpc TradeCapture    (QueryGetTradeCaptureRequest) returns (QueryGetTradeCaptureResponse) {
    option (google.api.http).get = "/jim380/Re/fix/trade_capture/{tradeReportID}";
  
  }
  rpc TradeCaptureAll (QueryAllTradeCaptureRequest) returns (QueryAllTradeCaptureResponse) {
    option (google.api.http).get = "/jim380/Re/fix/trade_captures";
  
  }
  
  // Queries a list of MarketData items.
  rpc MarketData    (QueryGetMarketDataRequest) returns (QueryGetMarketDataResponse) {
    option (google.api.http).get = "/jim380/Re/fix/market_data/{mdReqID}";
  
  }
  rpc MarketDataAll (QueryAllMarketDataRequest) returns (QueryAllMarketDataResponse) {
    option (google.api.http).get = "/jim380/Re/fix/market_data";
  
  }
  
  // Queries a list of Security items.
  rpc Security    (QueryGetSecurityRequest) returns (QueryGetSecurityResponse) {
    option (google.api.http).get = "/jim380/Re/fix/security/{securityReqID}";
  
  }
  rpc SecurityAll (QueryAllSecurityRequest) returns (QueryAllSecurityResponse) {
    option (google.api.http).get = "/jim380/Re/fix/securities";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetAccountRequest {
  string did = 1;
}

message QueryGetAccountResponse {
  Account Account = 1 [(gogoproto.nullable) = false];
}

message QueryAllAccountRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAccountResponse {
  repeated Account                                Account    = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetSessionsRequest {
  string sessionID = 1;
}

message QueryGetSessionsResponse {
  Sessions Sessions = 1 [(gogoproto.nullable) = false];
}

message QueryAllSessionsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllSessionsResponse {
  repeated Sessions                               Sessions   = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetSessionRejectRequest {
  string sessionID = 1;
}

message QueryGetSessionRejectResponse {
  SessionReject SessionReject = 1 [(gogoproto.nullable) = false];
}

message QueryAllSessionRejectRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllSessionRejectResponse {
  repeated SessionReject                          SessionReject = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination    = 2;
}

message QueryGetSessionLogoutRequest {
  string sessionID = 1;
}

message QueryGetSessionLogoutResponse {
  SessionLogout SessionLogout = 1 [(gogoproto.nullable) = false];
}

message QueryAllSessionLogoutRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllSessionLogoutResponse {
  repeated SessionLogout                          SessionLogout = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination    = 2;
}

message QueryGetOrdersRequest {
  string sessionID = 1;
}

message QueryGetOrdersResponse {
  Orders Orders = 1 [(gogoproto.nullable) = false];
}

message QueryAllOrdersRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllOrdersResponse {
  repeated Orders                                 Orders     = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetOrdersCancelRequestRequest {
  string sessionID = 1;
}

message QueryGetOrdersCancelRequestResponse {
  OrdersCancelRequest OrdersCancelRequest = 1 [(gogoproto.nullable) = false];
}

message QueryAllOrdersCancelRequestRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllOrdersCancelRequestResponse {
  repeated OrdersCancelRequest                    OrdersCancelRequest = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination          = 2;
}

message QueryGetOrdersCancelRejectRequest {
  string sessionID = 1;
}

message QueryGetOrdersCancelRejectResponse {
  OrdersCancelReject OrdersCancelReject = 1 [(gogoproto.nullable) = false];
}

message QueryAllOrdersCancelRejectRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllOrdersCancelRejectResponse {
  repeated OrdersCancelReject                     OrdersCancelReject = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination         = 2;
}

message QueryGetOrdersExecutionReportRequest {
  string sessionID = 1;
}

message QueryGetOrdersExecutionReportResponse {
  OrdersExecutionReport OrdersExecutionReport = 1 [(gogoproto.nullable) = false];
}

message QueryAllOrdersExecutionReportRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllOrdersExecutionReportResponse {
  repeated OrdersExecutionReport                  OrdersExecutionReport = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination            = 2;
}

message QueryGetQuoteRequest {
  string quoteReqID = 1;
}

message QueryGetQuoteResponse {
  Quote Quote = 1 [(gogoproto.nullable) = false];
}

// get Quotes by SessionID
message QuerySessionByIDQuoteRequest {
  string sessionID = 1;
}

// get Quotes Response by sessionID
message QuerySessionByIDQuoteResponse {
  repeated Quote Quote = 1 [(gogoproto.nullable) = false];
}

message QueryAllQuoteRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllQuoteResponse {
  repeated Quote                                  Quote      = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetTradeCaptureRequest {
  string tradeReportID = 1;
}

message QueryGetTradeCaptureResponse {
  TradeCapture TradeCapture = 1 [(gogoproto.nullable) = false];
}

message QueryAllTradeCaptureRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllTradeCaptureResponse {
  repeated TradeCapture                           TradeCapture = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination   = 2;
}

message QueryGetMarketDataRequest {
  string mdReqID = 1;
}

message QueryGetMarketDataResponse {
  MarketData MarketData = 1 [(gogoproto.nullable) = false];
}

message QueryAllMarketDataRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllMarketDataResponse {
  repeated MarketData                             MarketData = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetSecurityRequest {
  string securityReqID = 1;
}

message QueryGetSecurityResponse {
  Security Security = 1 [(gogoproto.nullable) = false];
}

message QueryAllSecurityRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllSecurityResponse {
  repeated Security                               Security   = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}


syntax = "proto3";

package jim380.re.oracle;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "re/oracle/params.proto";
import "re/oracle/multi_chain_tx_oracle.proto";

option go_package = "github.com/jim380/Re/x/oracle/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/jim380/Re/oracle/params";
  
  }
  
  // Queries a list of MultiChainTxOracle items.
  rpc MultiChainTxOracle    (QueryGetMultiChainTxOracleRequest) returns (QueryGetMultiChainTxOracleResponse) {
    option (google.api.http).get = "/jim380/Re/oracle/multi_chain_tx_oracle/{id}";
  
  }
  rpc MultiChainTxOracleAll (QueryAllMultiChainTxOracleRequest) returns (QueryAllMultiChainTxOracleResponse) {
    option (google.api.http).get = "/jim380/Re/oracle/multi_chain_tx_oracle";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetMultiChainTxOracleRequest {
  uint64 id = 1;
}

message QueryGetMultiChainTxOracleResponse {
  MultiChainTxOracle MultiChainTxOracle = 1 [(gogoproto.nullable) = false];
}

message QueryAllMultiChainTxOracleRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllMultiChainTxOracleResponse {
  repeated MultiChainTxOracle                     MultiChainTxOracle = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination         = 2;
}


// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: jim380/re/mic/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgRegisterMarketIdentificationCode struct {
	MIC                   string `protobuf:"bytes,1,opt,name=MIC,proto3" json:"MIC,omitempty"`
	Operating_MIC         string `protobuf:"bytes,2,opt,name=operating_MIC,json=operatingMIC,proto3" json:"operating_MIC,omitempty"`
	OPRT_SGMT             string `protobuf:"bytes,3,opt,name=OPRT_SGMT,json=OPRTSGMT,proto3" json:"OPRT_SGMT,omitempty"`
	MarketName            string `protobuf:"bytes,4,opt,name=market_name,json=marketName,proto3" json:"market_name,omitempty"`
	LegalEntityName       string `protobuf:"bytes,5,opt,name=legal_entity_name,json=legalEntityName,proto3" json:"legal_entity_name,omitempty"`
	LegalEntityIdentifier string `protobuf:"bytes,6,opt,name=legal_entity_identifier,json=legalEntityIdentifier,proto3" json:"legal_entity_identifier,omitempty"`
	MarketCategory        string `protobuf:"bytes,7,opt,name=market_category,json=marketCategory,proto3" json:"market_category,omitempty"`
	Acronym               string `protobuf:"bytes,8,opt,name=acronym,proto3" json:"acronym,omitempty"`
	ISOCountryCode        string `protobuf:"bytes,9,opt,name=ISO_country_code,json=ISOCountryCode,proto3" json:"ISO_country_code,omitempty"`
	City                  string `protobuf:"bytes,10,opt,name=city,proto3" json:"city,omitempty"`
	Website               string `protobuf:"bytes,11,opt,name=website,proto3" json:"website,omitempty"`
	Status                string `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	CreationDate          string `protobuf:"bytes,13,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	LastUpdateDate        string `protobuf:"bytes,14,opt,name=last_update_date,json=lastUpdateDate,proto3" json:"last_update_date,omitempty"`
	LastValidationDate    string `protobuf:"bytes,15,opt,name=last_validation_date,json=lastValidationDate,proto3" json:"last_validation_date,omitempty"`
	ExpiryDate            string `protobuf:"bytes,16,opt,name=expiry_date,json=expiryDate,proto3" json:"expiry_date,omitempty"`
	Comments              string `protobuf:"bytes,17,opt,name=comments,proto3" json:"comments,omitempty"`
	Creator               string `protobuf:"bytes,18,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgRegisterMarketIdentificationCode) Reset()         { *m = MsgRegisterMarketIdentificationCode{} }
func (m *MsgRegisterMarketIdentificationCode) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterMarketIdentificationCode) ProtoMessage()    {}
func (*MsgRegisterMarketIdentificationCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_525e366281dca91e, []int{0}
}
func (m *MsgRegisterMarketIdentificationCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterMarketIdentificationCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterMarketIdentificationCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterMarketIdentificationCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterMarketIdentificationCode.Merge(m, src)
}
func (m *MsgRegisterMarketIdentificationCode) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterMarketIdentificationCode) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterMarketIdentificationCode.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterMarketIdentificationCode proto.InternalMessageInfo

func (m *MsgRegisterMarketIdentificationCode) GetMIC() string {
	if m != nil {
		return m.MIC
	}
	return ""
}

func (m *MsgRegisterMarketIdentificationCode) GetOperating_MIC() string {
	if m != nil {
		return m.Operating_MIC
	}
	return ""
}

func (m *MsgRegisterMarketIdentificationCode) GetOPRT_SGMT() string {
	if m != nil {
		return m.OPRT_SGMT
	}
	return ""
}

func (m *MsgRegisterMarketIdentificationCode) GetMarketName() string {
	if m != nil {
		return m.MarketName
	}
	return ""
}

func (m *MsgRegisterMarketIdentificationCode) GetLegalEntityName() string {
	if m != nil {
		return m.LegalEntityName
	}
	return ""
}

func (m *MsgRegisterMarketIdentificationCode) GetLegalEntityIdentifier() string {
	if m != nil {
		return m.LegalEntityIdentifier
	}
	return ""
}

func (m *MsgRegisterMarketIdentificationCode) GetMarketCategory() string {
	if m != nil {
		return m.MarketCategory
	}
	return ""
}

func (m *MsgRegisterMarketIdentificationCode) GetAcronym() string {
	if m != nil {
		return m.Acronym
	}
	return ""
}

func (m *MsgRegisterMarketIdentificationCode) GetISOCountryCode() string {
	if m != nil {
		return m.ISOCountryCode
	}
	return ""
}

func (m *MsgRegisterMarketIdentificationCode) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *MsgRegisterMarketIdentificationCode) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *MsgRegisterMarketIdentificationCode) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MsgRegisterMarketIdentificationCode) GetCreationDate() string {
	if m != nil {
		return m.CreationDate
	}
	return ""
}

func (m *MsgRegisterMarketIdentificationCode) GetLastUpdateDate() string {
	if m != nil {
		return m.LastUpdateDate
	}
	return ""
}

func (m *MsgRegisterMarketIdentificationCode) GetLastValidationDate() string {
	if m != nil {
		return m.LastValidationDate
	}
	return ""
}

func (m *MsgRegisterMarketIdentificationCode) GetExpiryDate() string {
	if m != nil {
		return m.ExpiryDate
	}
	return ""
}

func (m *MsgRegisterMarketIdentificationCode) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

func (m *MsgRegisterMarketIdentificationCode) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgRegisterMarketIdentificationCodeResponse struct {
}

func (m *MsgRegisterMarketIdentificationCodeResponse) Reset() {
	*m = MsgRegisterMarketIdentificationCodeResponse{}
}
func (m *MsgRegisterMarketIdentificationCodeResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgRegisterMarketIdentificationCodeResponse) ProtoMessage() {}
func (*MsgRegisterMarketIdentificationCodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_525e366281dca91e, []int{1}
}
func (m *MsgRegisterMarketIdentificationCodeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterMarketIdentificationCodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterMarketIdentificationCodeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterMarketIdentificationCodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterMarketIdentificationCodeResponse.Merge(m, src)
}
func (m *MsgRegisterMarketIdentificationCodeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterMarketIdentificationCodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterMarketIdentificationCodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterMarketIdentificationCodeResponse proto.InternalMessageInfo

type MsgUpdateMarketIdentificationCode struct {
	Old_MIC               string `protobuf:"bytes,1,opt,name=old_MIC,json=oldMIC,proto3" json:"old_MIC,omitempty"`
	New_MIC               string `protobuf:"bytes,2,opt,name=new_MIC,json=newMIC,proto3" json:"new_MIC,omitempty"`
	Operating_MIC         string `protobuf:"bytes,3,opt,name=operating_MIC,json=operatingMIC,proto3" json:"operating_MIC,omitempty"`
	OPRT_SGMT             string `protobuf:"bytes,4,opt,name=OPRT_SGMT,json=OPRTSGMT,proto3" json:"OPRT_SGMT,omitempty"`
	MarketName            string `protobuf:"bytes,5,opt,name=market_name,json=marketName,proto3" json:"market_name,omitempty"`
	LegalEntityName       string `protobuf:"bytes,6,opt,name=legal_entity_name,json=legalEntityName,proto3" json:"legal_entity_name,omitempty"`
	LegalEntityIdentifier string `protobuf:"bytes,7,opt,name=legal_entity_identifier,json=legalEntityIdentifier,proto3" json:"legal_entity_identifier,omitempty"`
	MarketCategory        string `protobuf:"bytes,8,opt,name=market_category,json=marketCategory,proto3" json:"market_category,omitempty"`
	Acronym               string `protobuf:"bytes,9,opt,name=acronym,proto3" json:"acronym,omitempty"`
	ISOCountryCode        string `protobuf:"bytes,10,opt,name=ISO_country_code,json=ISOCountryCode,proto3" json:"ISO_country_code,omitempty"`
	City                  string `protobuf:"bytes,11,opt,name=city,proto3" json:"city,omitempty"`
	Website               string `protobuf:"bytes,12,opt,name=website,proto3" json:"website,omitempty"`
	Status                string `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	CreationDate          string `protobuf:"bytes,14,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	LastUpdateDate        string `protobuf:"bytes,15,opt,name=last_update_date,json=lastUpdateDate,proto3" json:"last_update_date,omitempty"`
	LastValidationDate    string `protobuf:"bytes,16,opt,name=last_validation_date,json=lastValidationDate,proto3" json:"last_validation_date,omitempty"`
	ExpiryDate            string `protobuf:"bytes,17,opt,name=expiry_date,json=expiryDate,proto3" json:"expiry_date,omitempty"`
	Comments              string `protobuf:"bytes,18,opt,name=comments,proto3" json:"comments,omitempty"`
	Creator               string `protobuf:"bytes,19,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgUpdateMarketIdentificationCode) Reset()         { *m = MsgUpdateMarketIdentificationCode{} }
func (m *MsgUpdateMarketIdentificationCode) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateMarketIdentificationCode) ProtoMessage()    {}
func (*MsgUpdateMarketIdentificationCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_525e366281dca91e, []int{2}
}
func (m *MsgUpdateMarketIdentificationCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateMarketIdentificationCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateMarketIdentificationCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateMarketIdentificationCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateMarketIdentificationCode.Merge(m, src)
}
func (m *MsgUpdateMarketIdentificationCode) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateMarketIdentificationCode) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateMarketIdentificationCode.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateMarketIdentificationCode proto.InternalMessageInfo

func (m *MsgUpdateMarketIdentificationCode) GetOld_MIC() string {
	if m != nil {
		return m.Old_MIC
	}
	return ""
}

func (m *MsgUpdateMarketIdentificationCode) GetNew_MIC() string {
	if m != nil {
		return m.New_MIC
	}
	return ""
}

func (m *MsgUpdateMarketIdentificationCode) GetOperating_MIC() string {
	if m != nil {
		return m.Operating_MIC
	}
	return ""
}

func (m *MsgUpdateMarketIdentificationCode) GetOPRT_SGMT() string {
	if m != nil {
		return m.OPRT_SGMT
	}
	return ""
}

func (m *MsgUpdateMarketIdentificationCode) GetMarketName() string {
	if m != nil {
		return m.MarketName
	}
	return ""
}

func (m *MsgUpdateMarketIdentificationCode) GetLegalEntityName() string {
	if m != nil {
		return m.LegalEntityName
	}
	return ""
}

func (m *MsgUpdateMarketIdentificationCode) GetLegalEntityIdentifier() string {
	if m != nil {
		return m.LegalEntityIdentifier
	}
	return ""
}

func (m *MsgUpdateMarketIdentificationCode) GetMarketCategory() string {
	if m != nil {
		return m.MarketCategory
	}
	return ""
}

func (m *MsgUpdateMarketIdentificationCode) GetAcronym() string {
	if m != nil {
		return m.Acronym
	}
	return ""
}

func (m *MsgUpdateMarketIdentificationCode) GetISOCountryCode() string {
	if m != nil {
		return m.ISOCountryCode
	}
	return ""
}

func (m *MsgUpdateMarketIdentificationCode) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *MsgUpdateMarketIdentificationCode) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *MsgUpdateMarketIdentificationCode) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MsgUpdateMarketIdentificationCode) GetCreationDate() string {
	if m != nil {
		return m.CreationDate
	}
	return ""
}

func (m *MsgUpdateMarketIdentificationCode) GetLastUpdateDate() string {
	if m != nil {
		return m.LastUpdateDate
	}
	return ""
}

func (m *MsgUpdateMarketIdentificationCode) GetLastValidationDate() string {
	if m != nil {
		return m.LastValidationDate
	}
	return ""
}

func (m *MsgUpdateMarketIdentificationCode) GetExpiryDate() string {
	if m != nil {
		return m.ExpiryDate
	}
	return ""
}

func (m *MsgUpdateMarketIdentificationCode) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

func (m *MsgUpdateMarketIdentificationCode) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgUpdateMarketIdentificationCodeResponse struct {
}

func (m *MsgUpdateMarketIdentificationCodeResponse) Reset() {
	*m = MsgUpdateMarketIdentificationCodeResponse{}
}
func (m *MsgUpdateMarketIdentificationCodeResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgUpdateMarketIdentificationCodeResponse) ProtoMessage() {}
func (*MsgUpdateMarketIdentificationCodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_525e366281dca91e, []int{3}
}
func (m *MsgUpdateMarketIdentificationCodeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateMarketIdentificationCodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateMarketIdentificationCodeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateMarketIdentificationCodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateMarketIdentificationCodeResponse.Merge(m, src)
}
func (m *MsgUpdateMarketIdentificationCodeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateMarketIdentificationCodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateMarketIdentificationCodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateMarketIdentificationCodeResponse proto.InternalMessageInfo

type MsgDeleteMarketIdentificationCode struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	MIC     string `protobuf:"bytes,2,opt,name=MIC,proto3" json:"MIC,omitempty"`
}

func (m *MsgDeleteMarketIdentificationCode) Reset()         { *m = MsgDeleteMarketIdentificationCode{} }
func (m *MsgDeleteMarketIdentificationCode) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteMarketIdentificationCode) ProtoMessage()    {}
func (*MsgDeleteMarketIdentificationCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_525e366281dca91e, []int{4}
}
func (m *MsgDeleteMarketIdentificationCode) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteMarketIdentificationCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteMarketIdentificationCode.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteMarketIdentificationCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteMarketIdentificationCode.Merge(m, src)
}
func (m *MsgDeleteMarketIdentificationCode) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteMarketIdentificationCode) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteMarketIdentificationCode.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteMarketIdentificationCode proto.InternalMessageInfo

func (m *MsgDeleteMarketIdentificationCode) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteMarketIdentificationCode) GetMIC() string {
	if m != nil {
		return m.MIC
	}
	return ""
}

type MsgDeleteMarketIdentificationCodeResponse struct {
}

func (m *MsgDeleteMarketIdentificationCodeResponse) Reset() {
	*m = MsgDeleteMarketIdentificationCodeResponse{}
}
func (m *MsgDeleteMarketIdentificationCodeResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgDeleteMarketIdentificationCodeResponse) ProtoMessage() {}
func (*MsgDeleteMarketIdentificationCodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_525e366281dca91e, []int{5}
}
func (m *MsgDeleteMarketIdentificationCodeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteMarketIdentificationCodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteMarketIdentificationCodeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteMarketIdentificationCodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteMarketIdentificationCodeResponse.Merge(m, src)
}
func (m *MsgDeleteMarketIdentificationCodeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteMarketIdentificationCodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteMarketIdentificationCodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteMarketIdentificationCodeResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgRegisterMarketIdentificationCode)(nil), "jim380.re.mic.MsgRegisterMarketIdentificationCode")
	proto.RegisterType((*MsgRegisterMarketIdentificationCodeResponse)(nil), "jim380.re.mic.MsgRegisterMarketIdentificationCodeResponse")
	proto.RegisterType((*MsgUpdateMarketIdentificationCode)(nil), "jim380.re.mic.MsgUpdateMarketIdentificationCode")
	proto.RegisterType((*MsgUpdateMarketIdentificationCodeResponse)(nil), "jim380.re.mic.MsgUpdateMarketIdentificationCodeResponse")
	proto.RegisterType((*MsgDeleteMarketIdentificationCode)(nil), "jim380.re.mic.MsgDeleteMarketIdentificationCode")
	proto.RegisterType((*MsgDeleteMarketIdentificationCodeResponse)(nil), "jim380.re.mic.MsgDeleteMarketIdentificationCodeResponse")
}

func init() { proto.RegisterFile("jim380/re/mic/tx.proto", fileDescriptor_525e366281dca91e) }

var fileDescriptor_525e366281dca91e = []byte{
	// 709 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x96, 0xcf, 0x6e, 0xd3, 0x4a,
	0x14, 0xc6, 0xeb, 0xa6, 0xf9, 0x37, 0x69, 0x9a, 0x74, 0xee, 0xa5, 0x1d, 0x05, 0x29, 0x2d, 0xed,
	0x82, 0x42, 0x85, 0x53, 0xb5, 0x12, 0xaa, 0xba, 0x24, 0x45, 0x28, 0x8b, 0x10, 0x94, 0x16, 0x16,
	0x6c, 0x2c, 0xd7, 0x3e, 0x98, 0x01, 0xdb, 0x13, 0xd9, 0x13, 0x5a, 0x3f, 0x02, 0x12, 0x0b, 0xc4,
	0x4b, 0xf0, 0x0a, 0x3c, 0x02, 0xcb, 0x2e, 0x59, 0xa2, 0xf6, 0x45, 0xd0, 0xcc, 0xd8, 0x21, 0x16,
	0xa9, 0x9d, 0xec, 0x3c, 0xdf, 0xf9, 0xce, 0x99, 0x33, 0x33, 0x3f, 0xdb, 0x83, 0x36, 0x3e, 0x50,
	0xef, 0xe8, 0xf8, 0xa0, 0x13, 0x40, 0xc7, 0xa3, 0x56, 0x87, 0x5f, 0xe9, 0xa3, 0x80, 0x71, 0x86,
	0xeb, 0x4a, 0xd7, 0x03, 0xd0, 0x3d, 0x6a, 0xb5, 0xf4, 0xb4, 0xcd, 0x33, 0x83, 0x8f, 0xc0, 0x0d,
	0x6a, 0x83, 0xcf, 0xe9, 0x3b, 0x6a, 0x99, 0x9c, 0x32, 0xdf, 0xb0, 0x98, 0x0d, 0x2a, 0x7d, 0xe7,
	0x73, 0x11, 0xed, 0xf6, 0x43, 0x67, 0x08, 0x0e, 0x0d, 0x39, 0x04, 0x7d, 0xe9, 0xef, 0xa5, 0xec,
	0x5d, 0x66, 0x03, 0x6e, 0xa2, 0x42, 0xbf, 0xd7, 0x25, 0xda, 0xb6, 0xb6, 0x57, 0x1d, 0x8a, 0x47,
	0xbc, 0x8b, 0xea, 0x6c, 0x04, 0x81, 0xc9, 0xa9, 0xef, 0x18, 0x22, 0xb6, 0x2c, 0x63, 0xab, 0x13,
	0x51, 0x98, 0xee, 0xa3, 0xea, 0xe0, 0xd5, 0xf0, 0xdc, 0x38, 0x7b, 0xd1, 0x3f, 0x27, 0x05, 0x69,
	0xa8, 0x08, 0x41, 0x8c, 0xf1, 0x16, 0xaa, 0xc5, 0xfd, 0xf9, 0xa6, 0x07, 0x64, 0x45, 0x86, 0x91,
	0x92, 0x5e, 0x9a, 0x1e, 0xe0, 0xc7, 0x68, 0xdd, 0x05, 0xc7, 0x74, 0x0d, 0xd1, 0x0e, 0x8f, 0x94,
	0xad, 0x28, 0x6d, 0x0d, 0x19, 0x78, 0x2e, 0x75, 0xe9, 0x7d, 0x8a, 0x36, 0x53, 0xde, 0x64, 0xc9,
	0x10, 0x90, 0x92, 0xcc, 0xb8, 0x37, 0x95, 0xd1, 0x9b, 0x04, 0xf1, 0x43, 0xd4, 0x88, 0x9b, 0xb0,
	0x4c, 0x0e, 0x0e, 0x0b, 0x22, 0x52, 0x96, 0xfe, 0x35, 0x25, 0x77, 0x63, 0x15, 0x13, 0x54, 0x36,
	0xad, 0x80, 0xf9, 0x91, 0x47, 0x2a, 0xd2, 0x90, 0x0c, 0xf1, 0x1e, 0x6a, 0xf6, 0xce, 0x06, 0x86,
	0xc5, 0xc6, 0x3e, 0x0f, 0x22, 0xb9, 0xbb, 0xa4, 0xaa, 0x6a, 0xf4, 0xce, 0x06, 0x5d, 0x25, 0xcb,
	0x5d, 0xc4, 0x68, 0xc5, 0xa2, 0x3c, 0x22, 0x48, 0x46, 0xe5, 0xb3, 0xa8, 0x7b, 0x09, 0x17, 0x21,
	0xe5, 0x40, 0x6a, 0xaa, 0x6e, 0x3c, 0xc4, 0x1b, 0xa8, 0x14, 0x72, 0x93, 0x8f, 0x43, 0xb2, 0x2a,
	0x03, 0xf1, 0x48, 0xec, 0xbc, 0x15, 0x80, 0x3a, 0x4a, 0xdb, 0xe4, 0x40, 0xea, 0x6a, 0xe7, 0x13,
	0xf1, 0xd4, 0xe4, 0x20, 0x9a, 0x72, 0xcd, 0x90, 0x1b, 0xe3, 0x91, 0xb0, 0x28, 0xdf, 0x9a, 0x6a,
	0x4a, 0xe8, 0xaf, 0xa5, 0x2c, 0x9d, 0x07, 0xe8, 0x7f, 0xe9, 0xfc, 0x64, 0xba, 0xd4, 0x9e, 0xaa,
	0xda, 0x90, 0x6e, 0x2c, 0x62, 0x6f, 0x26, 0x21, 0x99, 0xb1, 0x85, 0x6a, 0x70, 0x35, 0xa2, 0x41,
	0xa4, 0x8c, 0x4d, 0x75, 0x70, 0x4a, 0x92, 0x86, 0x16, 0xaa, 0x58, 0xcc, 0xf3, 0xc0, 0xe7, 0x21,
	0x59, 0x57, 0xa7, 0x9e, 0x8c, 0xc5, 0x7a, 0x65, 0xa3, 0x2c, 0x20, 0x58, 0xad, 0x37, 0x1e, 0xee,
	0x3c, 0x41, 0xfb, 0x73, 0xa0, 0x38, 0x84, 0x70, 0xc4, 0xfc, 0x10, 0x76, 0xbe, 0x17, 0xd1, 0x83,
	0x7e, 0xe8, 0xa8, 0x95, 0xdc, 0x09, 0xee, 0x26, 0x2a, 0x33, 0xd7, 0x36, 0xfe, 0xc2, 0x5b, 0x62,
	0xae, 0x2d, 0xd0, 0xdc, 0x44, 0x65, 0x1f, 0x2e, 0xa7, 0xc8, 0x2d, 0xf9, 0x70, 0x39, 0x13, 0xec,
	0x42, 0x1e, 0xd8, 0x2b, 0xd9, 0x60, 0x17, 0xe7, 0x03, 0xbb, 0xb4, 0x30, 0xd8, 0xe5, 0x05, 0xc1,
	0xae, 0xe4, 0x81, 0x5d, 0xcd, 0x07, 0x1b, 0x65, 0x82, 0x5d, 0x9b, 0x0d, 0xf6, 0xea, 0x5d, 0x60,
	0xd7, 0xb3, 0xc1, 0x5e, 0x9b, 0x13, 0xec, 0xc6, 0x42, 0x60, 0x37, 0xe7, 0x05, 0x7b, 0x3d, 0x13,
	0x6c, 0x7c, 0x37, 0xd8, 0xff, 0xa5, 0xc1, 0xde, 0x47, 0x8f, 0x72, 0x41, 0x9d, 0x60, 0x3d, 0x90,
	0x54, 0x9f, 0x82, 0x0b, 0x19, 0x54, 0x4f, 0xcd, 0xa5, 0xa5, 0xe6, 0x4a, 0x3e, 0xd4, 0xcb, 0x93,
	0x0f, 0x75, 0x3c, 0x7b, 0x76, 0xc1, 0x64, 0xf6, 0xc3, 0x1f, 0x05, 0x54, 0xe8, 0x87, 0x0e, 0xfe,
	0xa6, 0xa1, 0xed, 0xdc, 0x9f, 0xc2, 0xa1, 0x9e, 0xfa, 0xf9, 0xe8, 0x73, 0xbc, 0xbd, 0xad, 0x93,
	0xc5, 0x73, 0x92, 0xe6, 0xf0, 0x17, 0x0d, 0xb5, 0x73, 0x5e, 0xf7, 0x83, 0x7f, 0xcb, 0x67, 0x67,
	0xb4, 0x8e, 0x17, 0xcd, 0x48, 0xb5, 0x93, 0x73, 0x4e, 0x33, 0xda, 0xc9, 0xce, 0x98, 0xd5, 0xce,
	0x7c, 0x47, 0xf7, 0xec, 0xe4, 0xe7, 0x4d, 0x5b, 0xbb, 0xbe, 0x69, 0x6b, 0xbf, 0x6f, 0xda, 0xda,
	0xd7, 0xdb, 0xf6, 0xd2, 0xf5, 0x6d, 0x7b, 0xe9, 0xd7, 0x6d, 0x7b, 0xe9, 0xed, 0xb6, 0x43, 0xf9,
	0xfb, 0xf1, 0x85, 0x6e, 0x31, 0xaf, 0x13, 0xdf, 0x0f, 0x86, 0xd0, 0xb9, 0x52, 0x17, 0x89, 0x68,
	0x04, 0xe1, 0x45, 0x49, 0xde, 0x06, 0x8e, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x57, 0x60, 0xb0,
	0x5e, 0x66, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	RegisterMarketIdentificationCode(ctx context.Context, in *MsgRegisterMarketIdentificationCode, opts ...grpc.CallOption) (*MsgRegisterMarketIdentificationCodeResponse, error)
	UpdateMarketIdentificationCode(ctx context.Context, in *MsgUpdateMarketIdentificationCode, opts ...grpc.CallOption) (*MsgUpdateMarketIdentificationCodeResponse, error)
	DeleteMarketIdentificationCode(ctx context.Context, in *MsgDeleteMarketIdentificationCode, opts ...grpc.CallOption) (*MsgDeleteMarketIdentificationCodeResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) RegisterMarketIdentificationCode(ctx context.Context, in *MsgRegisterMarketIdentificationCode, opts ...grpc.CallOption) (*MsgRegisterMarketIdentificationCodeResponse, error) {
	out := new(MsgRegisterMarketIdentificationCodeResponse)
	err := c.cc.Invoke(ctx, "/jim380.re.mic.Msg/RegisterMarketIdentificationCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateMarketIdentificationCode(ctx context.Context, in *MsgUpdateMarketIdentificationCode, opts ...grpc.CallOption) (*MsgUpdateMarketIdentificationCodeResponse, error) {
	out := new(MsgUpdateMarketIdentificationCodeResponse)
	err := c.cc.Invoke(ctx, "/jim380.re.mic.Msg/UpdateMarketIdentificationCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteMarketIdentificationCode(ctx context.Context, in *MsgDeleteMarketIdentificationCode, opts ...grpc.CallOption) (*MsgDeleteMarketIdentificationCodeResponse, error) {
	out := new(MsgDeleteMarketIdentificationCodeResponse)
	err := c.cc.Invoke(ctx, "/jim380.re.mic.Msg/DeleteMarketIdentificationCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	RegisterMarketIdentificationCode(context.Context, *MsgRegisterMarketIdentificationCode) (*MsgRegisterMarketIdentificationCodeResponse, error)
	UpdateMarketIdentificationCode(context.Context, *MsgUpdateMarketIdentificationCode) (*MsgUpdateMarketIdentificationCodeResponse, error)
	DeleteMarketIdentificationCode(context.Context, *MsgDeleteMarketIdentificationCode) (*MsgDeleteMarketIdentificationCodeResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) RegisterMarketIdentificationCode(ctx context.Context, req *MsgRegisterMarketIdentificationCode) (*MsgRegisterMarketIdentificationCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterMarketIdentificationCode not implemented")
}
func (*UnimplementedMsgServer) UpdateMarketIdentificationCode(ctx context.Context, req *MsgUpdateMarketIdentificationCode) (*MsgUpdateMarketIdentificationCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMarketIdentificationCode not implemented")
}
func (*UnimplementedMsgServer) DeleteMarketIdentificationCode(ctx context.Context, req *MsgDeleteMarketIdentificationCode) (*MsgDeleteMarketIdentificationCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMarketIdentificationCode not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_RegisterMarketIdentificationCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRegisterMarketIdentificationCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RegisterMarketIdentificationCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jim380.re.mic.Msg/RegisterMarketIdentificationCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RegisterMarketIdentificationCode(ctx, req.(*MsgRegisterMarketIdentificationCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateMarketIdentificationCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateMarketIdentificationCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateMarketIdentificationCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jim380.re.mic.Msg/UpdateMarketIdentificationCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateMarketIdentificationCode(ctx, req.(*MsgUpdateMarketIdentificationCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteMarketIdentificationCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteMarketIdentificationCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteMarketIdentificationCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jim380.re.mic.Msg/DeleteMarketIdentificationCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteMarketIdentificationCode(ctx, req.(*MsgDeleteMarketIdentificationCode))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "jim380.re.mic.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterMarketIdentificationCode",
			Handler:    _Msg_RegisterMarketIdentificationCode_Handler,
		},
		{
			MethodName: "UpdateMarketIdentificationCode",
			Handler:    _Msg_UpdateMarketIdentificationCode_Handler,
		},
		{
			MethodName: "DeleteMarketIdentificationCode",
			Handler:    _Msg_DeleteMarketIdentificationCode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "jim380/re/mic/tx.proto",
}

func (m *MsgRegisterMarketIdentificationCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterMarketIdentificationCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterMarketIdentificationCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	if len(m.Comments) > 0 {
		i -= len(m.Comments)
		copy(dAtA[i:], m.Comments)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Comments)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if len(m.ExpiryDate) > 0 {
		i -= len(m.ExpiryDate)
		copy(dAtA[i:], m.ExpiryDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ExpiryDate)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if len(m.LastValidationDate) > 0 {
		i -= len(m.LastValidationDate)
		copy(dAtA[i:], m.LastValidationDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LastValidationDate)))
		i--
		dAtA[i] = 0x7a
	}
	if len(m.LastUpdateDate) > 0 {
		i -= len(m.LastUpdateDate)
		copy(dAtA[i:], m.LastUpdateDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LastUpdateDate)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.CreationDate) > 0 {
		i -= len(m.CreationDate)
		copy(dAtA[i:], m.CreationDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CreationDate)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.Website) > 0 {
		i -= len(m.Website)
		copy(dAtA[i:], m.Website)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Website)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.City) > 0 {
		i -= len(m.City)
		copy(dAtA[i:], m.City)
		i = encodeVarintTx(dAtA, i, uint64(len(m.City)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.ISOCountryCode) > 0 {
		i -= len(m.ISOCountryCode)
		copy(dAtA[i:], m.ISOCountryCode)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ISOCountryCode)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Acronym) > 0 {
		i -= len(m.Acronym)
		copy(dAtA[i:], m.Acronym)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Acronym)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.MarketCategory) > 0 {
		i -= len(m.MarketCategory)
		copy(dAtA[i:], m.MarketCategory)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MarketCategory)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.LegalEntityIdentifier) > 0 {
		i -= len(m.LegalEntityIdentifier)
		copy(dAtA[i:], m.LegalEntityIdentifier)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LegalEntityIdentifier)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.LegalEntityName) > 0 {
		i -= len(m.LegalEntityName)
		copy(dAtA[i:], m.LegalEntityName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LegalEntityName)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.MarketName) > 0 {
		i -= len(m.MarketName)
		copy(dAtA[i:], m.MarketName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MarketName)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.OPRT_SGMT) > 0 {
		i -= len(m.OPRT_SGMT)
		copy(dAtA[i:], m.OPRT_SGMT)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OPRT_SGMT)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Operating_MIC) > 0 {
		i -= len(m.Operating_MIC)
		copy(dAtA[i:], m.Operating_MIC)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Operating_MIC)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.MIC) > 0 {
		i -= len(m.MIC)
		copy(dAtA[i:], m.MIC)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MIC)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRegisterMarketIdentificationCodeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterMarketIdentificationCodeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterMarketIdentificationCodeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateMarketIdentificationCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateMarketIdentificationCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateMarketIdentificationCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x9a
	}
	if len(m.Comments) > 0 {
		i -= len(m.Comments)
		copy(dAtA[i:], m.Comments)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Comments)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	if len(m.ExpiryDate) > 0 {
		i -= len(m.ExpiryDate)
		copy(dAtA[i:], m.ExpiryDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ExpiryDate)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if len(m.LastValidationDate) > 0 {
		i -= len(m.LastValidationDate)
		copy(dAtA[i:], m.LastValidationDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LastValidationDate)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if len(m.LastUpdateDate) > 0 {
		i -= len(m.LastUpdateDate)
		copy(dAtA[i:], m.LastUpdateDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LastUpdateDate)))
		i--
		dAtA[i] = 0x7a
	}
	if len(m.CreationDate) > 0 {
		i -= len(m.CreationDate)
		copy(dAtA[i:], m.CreationDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CreationDate)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.Website) > 0 {
		i -= len(m.Website)
		copy(dAtA[i:], m.Website)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Website)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.City) > 0 {
		i -= len(m.City)
		copy(dAtA[i:], m.City)
		i = encodeVarintTx(dAtA, i, uint64(len(m.City)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.ISOCountryCode) > 0 {
		i -= len(m.ISOCountryCode)
		copy(dAtA[i:], m.ISOCountryCode)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ISOCountryCode)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.Acronym) > 0 {
		i -= len(m.Acronym)
		copy(dAtA[i:], m.Acronym)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Acronym)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.MarketCategory) > 0 {
		i -= len(m.MarketCategory)
		copy(dAtA[i:], m.MarketCategory)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MarketCategory)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.LegalEntityIdentifier) > 0 {
		i -= len(m.LegalEntityIdentifier)
		copy(dAtA[i:], m.LegalEntityIdentifier)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LegalEntityIdentifier)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.LegalEntityName) > 0 {
		i -= len(m.LegalEntityName)
		copy(dAtA[i:], m.LegalEntityName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LegalEntityName)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.MarketName) > 0 {
		i -= len(m.MarketName)
		copy(dAtA[i:], m.MarketName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MarketName)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.OPRT_SGMT) > 0 {
		i -= len(m.OPRT_SGMT)
		copy(dAtA[i:], m.OPRT_SGMT)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OPRT_SGMT)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Operating_MIC) > 0 {
		i -= len(m.Operating_MIC)
		copy(dAtA[i:], m.Operating_MIC)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Operating_MIC)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.New_MIC) > 0 {
		i -= len(m.New_MIC)
		copy(dAtA[i:], m.New_MIC)
		i = encodeVarintTx(dAtA, i, uint64(len(m.New_MIC)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Old_MIC) > 0 {
		i -= len(m.Old_MIC)
		copy(dAtA[i:], m.Old_MIC)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Old_MIC)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateMarketIdentificationCodeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateMarketIdentificationCodeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateMarketIdentificationCodeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteMarketIdentificationCode) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteMarketIdentificationCode) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteMarketIdentificationCode) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MIC) > 0 {
		i -= len(m.MIC)
		copy(dAtA[i:], m.MIC)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MIC)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteMarketIdentificationCodeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteMarketIdentificationCodeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteMarketIdentificationCodeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgRegisterMarketIdentificationCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MIC)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Operating_MIC)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OPRT_SGMT)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MarketName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LegalEntityName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LegalEntityIdentifier)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MarketCategory)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Acronym)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ISOCountryCode)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.City)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Website)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CreationDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LastUpdateDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LastValidationDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ExpiryDate)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	l = len(m.Comments)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRegisterMarketIdentificationCodeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateMarketIdentificationCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Old_MIC)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.New_MIC)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Operating_MIC)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OPRT_SGMT)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MarketName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LegalEntityName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LegalEntityIdentifier)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MarketCategory)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Acronym)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ISOCountryCode)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.City)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Website)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CreationDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LastUpdateDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LastValidationDate)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	l = len(m.ExpiryDate)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	l = len(m.Comments)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateMarketIdentificationCodeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteMarketIdentificationCode) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MIC)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteMarketIdentificationCodeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgRegisterMarketIdentificationCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterMarketIdentificationCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterMarketIdentificationCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MIC", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MIC = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Operating_MIC", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Operating_MIC = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OPRT_SGMT", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OPRT_SGMT = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MarketName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LegalEntityName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LegalEntityName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LegalEntityIdentifier", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LegalEntityIdentifier = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketCategory", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MarketCategory = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Acronym", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Acronym = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ISOCountryCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ISOCountryCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field City", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.City = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Website", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Website = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreationDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreationDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdateDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastUpdateDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastValidationDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastValidationDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiryDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExpiryDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Comments", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Comments = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterMarketIdentificationCodeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterMarketIdentificationCodeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterMarketIdentificationCodeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateMarketIdentificationCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateMarketIdentificationCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateMarketIdentificationCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Old_MIC", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Old_MIC = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field New_MIC", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.New_MIC = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Operating_MIC", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Operating_MIC = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OPRT_SGMT", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OPRT_SGMT = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MarketName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LegalEntityName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LegalEntityName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LegalEntityIdentifier", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LegalEntityIdentifier = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MarketCategory", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MarketCategory = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Acronym", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Acronym = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ISOCountryCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ISOCountryCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field City", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.City = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Website", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Website = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreationDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreationDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdateDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastUpdateDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastValidationDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastValidationDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiryDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExpiryDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Comments", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Comments = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateMarketIdentificationCodeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateMarketIdentificationCodeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateMarketIdentificationCodeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteMarketIdentificationCode) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteMarketIdentificationCode: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteMarketIdentificationCode: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MIC", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MIC = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteMarketIdentificationCodeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteMarketIdentificationCodeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteMarketIdentificationCodeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)

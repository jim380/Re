// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: re/fix/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateAccount struct {
	Creator          string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Did              string `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
	CompanyName      string `protobuf:"bytes,3,opt,name=companyName,proto3" json:"companyName,omitempty"`
	Website          string `protobuf:"bytes,4,opt,name=website,proto3" json:"website,omitempty"`
	SocialMediaLinks string `protobuf:"bytes,5,opt,name=socialMediaLinks,proto3" json:"socialMediaLinks,omitempty"`
	CreatedAt        int32  `protobuf:"varint,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (m *MsgCreateAccount) Reset()         { *m = MsgCreateAccount{} }
func (m *MsgCreateAccount) String() string { return proto.CompactTextString(m) }
func (*MsgCreateAccount) ProtoMessage()    {}
func (*MsgCreateAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_11ceb96bb48cdb91, []int{0}
}
func (m *MsgCreateAccount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateAccount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateAccount.Merge(m, src)
}
func (m *MsgCreateAccount) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateAccount.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateAccount proto.InternalMessageInfo

func (m *MsgCreateAccount) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateAccount) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *MsgCreateAccount) GetCompanyName() string {
	if m != nil {
		return m.CompanyName
	}
	return ""
}

func (m *MsgCreateAccount) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *MsgCreateAccount) GetSocialMediaLinks() string {
	if m != nil {
		return m.SocialMediaLinks
	}
	return ""
}

func (m *MsgCreateAccount) GetCreatedAt() int32 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

type MsgCreateAccountResponse struct {
	Did string `protobuf:"bytes,1,opt,name=did,proto3" json:"did,omitempty"`
}

func (m *MsgCreateAccountResponse) Reset()         { *m = MsgCreateAccountResponse{} }
func (m *MsgCreateAccountResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateAccountResponse) ProtoMessage()    {}
func (*MsgCreateAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_11ceb96bb48cdb91, []int{1}
}
func (m *MsgCreateAccountResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateAccountResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateAccountResponse.Merge(m, src)
}
func (m *MsgCreateAccountResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateAccountResponse proto.InternalMessageInfo

func (m *MsgCreateAccountResponse) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

type MsgUpdateAccount struct {
	Creator          string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Did              string `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
	CompanyName      string `protobuf:"bytes,3,opt,name=companyName,proto3" json:"companyName,omitempty"`
	Website          string `protobuf:"bytes,4,opt,name=website,proto3" json:"website,omitempty"`
	SocialMediaLinks string `protobuf:"bytes,5,opt,name=socialMediaLinks,proto3" json:"socialMediaLinks,omitempty"`
	CreatedAt        int32  `protobuf:"varint,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (m *MsgUpdateAccount) Reset()         { *m = MsgUpdateAccount{} }
func (m *MsgUpdateAccount) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateAccount) ProtoMessage()    {}
func (*MsgUpdateAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_11ceb96bb48cdb91, []int{2}
}
func (m *MsgUpdateAccount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateAccount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateAccount.Merge(m, src)
}
func (m *MsgUpdateAccount) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateAccount.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateAccount proto.InternalMessageInfo

func (m *MsgUpdateAccount) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateAccount) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *MsgUpdateAccount) GetCompanyName() string {
	if m != nil {
		return m.CompanyName
	}
	return ""
}

func (m *MsgUpdateAccount) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *MsgUpdateAccount) GetSocialMediaLinks() string {
	if m != nil {
		return m.SocialMediaLinks
	}
	return ""
}

func (m *MsgUpdateAccount) GetCreatedAt() int32 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

type MsgUpdateAccountResponse struct {
}

func (m *MsgUpdateAccountResponse) Reset()         { *m = MsgUpdateAccountResponse{} }
func (m *MsgUpdateAccountResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateAccountResponse) ProtoMessage()    {}
func (*MsgUpdateAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_11ceb96bb48cdb91, []int{3}
}
func (m *MsgUpdateAccountResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateAccountResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateAccountResponse.Merge(m, src)
}
func (m *MsgUpdateAccountResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateAccountResponse proto.InternalMessageInfo

type MsgDeleteAccount struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Did     string `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
}

func (m *MsgDeleteAccount) Reset()         { *m = MsgDeleteAccount{} }
func (m *MsgDeleteAccount) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteAccount) ProtoMessage()    {}
func (*MsgDeleteAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_11ceb96bb48cdb91, []int{4}
}
func (m *MsgDeleteAccount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteAccount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteAccount.Merge(m, src)
}
func (m *MsgDeleteAccount) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteAccount.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteAccount proto.InternalMessageInfo

func (m *MsgDeleteAccount) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteAccount) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

type MsgDeleteAccountResponse struct {
}

func (m *MsgDeleteAccountResponse) Reset()         { *m = MsgDeleteAccountResponse{} }
func (m *MsgDeleteAccountResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteAccountResponse) ProtoMessage()    {}
func (*MsgDeleteAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_11ceb96bb48cdb91, []int{5}
}
func (m *MsgDeleteAccountResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteAccountResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteAccountResponse.Merge(m, src)
}
func (m *MsgDeleteAccountResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteAccountResponse proto.InternalMessageInfo

type MsgLogonInitiator struct {
	SessionID        string          `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	LogonInitiator   *LogonInitiator `protobuf:"bytes,2,opt,name=logonInitiator,proto3" json:"logonInitiator,omitempty"`
	Status           string          `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	IsAccepted       bool            `protobuf:"varint,4,opt,name=IsAccepted,proto3" json:"IsAccepted,omitempty"`
	InitiatorAddress string          `protobuf:"bytes,5,opt,name=initiatorAddress,proto3" json:"initiatorAddress,omitempty"`
}

func (m *MsgLogonInitiator) Reset()         { *m = MsgLogonInitiator{} }
func (m *MsgLogonInitiator) String() string { return proto.CompactTextString(m) }
func (*MsgLogonInitiator) ProtoMessage()    {}
func (*MsgLogonInitiator) Descriptor() ([]byte, []int) {
	return fileDescriptor_11ceb96bb48cdb91, []int{6}
}
func (m *MsgLogonInitiator) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgLogonInitiator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgLogonInitiator.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgLogonInitiator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgLogonInitiator.Merge(m, src)
}
func (m *MsgLogonInitiator) XXX_Size() int {
	return m.Size()
}
func (m *MsgLogonInitiator) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgLogonInitiator.DiscardUnknown(m)
}

var xxx_messageInfo_MsgLogonInitiator proto.InternalMessageInfo

func (m *MsgLogonInitiator) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *MsgLogonInitiator) GetLogonInitiator() *LogonInitiator {
	if m != nil {
		return m.LogonInitiator
	}
	return nil
}

func (m *MsgLogonInitiator) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MsgLogonInitiator) GetIsAccepted() bool {
	if m != nil {
		return m.IsAccepted
	}
	return false
}

func (m *MsgLogonInitiator) GetInitiatorAddress() string {
	if m != nil {
		return m.InitiatorAddress
	}
	return ""
}

type MsgLogonInitiatorResponse struct {
}

func (m *MsgLogonInitiatorResponse) Reset()         { *m = MsgLogonInitiatorResponse{} }
func (m *MsgLogonInitiatorResponse) String() string { return proto.CompactTextString(m) }
func (*MsgLogonInitiatorResponse) ProtoMessage()    {}
func (*MsgLogonInitiatorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_11ceb96bb48cdb91, []int{7}
}
func (m *MsgLogonInitiatorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgLogonInitiatorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgLogonInitiatorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgLogonInitiatorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgLogonInitiatorResponse.Merge(m, src)
}
func (m *MsgLogonInitiatorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgLogonInitiatorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgLogonInitiatorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgLogonInitiatorResponse proto.InternalMessageInfo

type MsgLogonAcceptor struct {
	SessionID       string         `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	LogonAcceptor   *LogonAcceptor `protobuf:"bytes,2,opt,name=logonAcceptor,proto3" json:"logonAcceptor,omitempty"`
	Status          string         `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	IsAccepted      bool           `protobuf:"varint,4,opt,name=IsAccepted,proto3" json:"IsAccepted,omitempty"`
	AcceptorAddress string         `protobuf:"bytes,5,opt,name=acceptorAddress,proto3" json:"acceptorAddress,omitempty"`
}

func (m *MsgLogonAcceptor) Reset()         { *m = MsgLogonAcceptor{} }
func (m *MsgLogonAcceptor) String() string { return proto.CompactTextString(m) }
func (*MsgLogonAcceptor) ProtoMessage()    {}
func (*MsgLogonAcceptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_11ceb96bb48cdb91, []int{8}
}
func (m *MsgLogonAcceptor) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgLogonAcceptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgLogonAcceptor.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgLogonAcceptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgLogonAcceptor.Merge(m, src)
}
func (m *MsgLogonAcceptor) XXX_Size() int {
	return m.Size()
}
func (m *MsgLogonAcceptor) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgLogonAcceptor.DiscardUnknown(m)
}

var xxx_messageInfo_MsgLogonAcceptor proto.InternalMessageInfo

func (m *MsgLogonAcceptor) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *MsgLogonAcceptor) GetLogonAcceptor() *LogonAcceptor {
	if m != nil {
		return m.LogonAcceptor
	}
	return nil
}

func (m *MsgLogonAcceptor) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MsgLogonAcceptor) GetIsAccepted() bool {
	if m != nil {
		return m.IsAccepted
	}
	return false
}

func (m *MsgLogonAcceptor) GetAcceptorAddress() string {
	if m != nil {
		return m.AcceptorAddress
	}
	return ""
}

type MsgLogonAcceptorResponse struct {
}

func (m *MsgLogonAcceptorResponse) Reset()         { *m = MsgLogonAcceptorResponse{} }
func (m *MsgLogonAcceptorResponse) String() string { return proto.CompactTextString(m) }
func (*MsgLogonAcceptorResponse) ProtoMessage()    {}
func (*MsgLogonAcceptorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_11ceb96bb48cdb91, []int{9}
}
func (m *MsgLogonAcceptorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgLogonAcceptorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgLogonAcceptorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgLogonAcceptorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgLogonAcceptorResponse.Merge(m, src)
}
func (m *MsgLogonAcceptorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgLogonAcceptorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgLogonAcceptorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgLogonAcceptorResponse proto.InternalMessageInfo

type MsgTerminateLogon struct {
	InitiatorAddress string `protobuf:"bytes,1,opt,name=initiatorAddress,proto3" json:"initiatorAddress,omitempty"`
	SessionID        string `protobuf:"bytes,2,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Did              string `protobuf:"bytes,3,opt,name=did,proto3" json:"did,omitempty"`
}

func (m *MsgTerminateLogon) Reset()         { *m = MsgTerminateLogon{} }
func (m *MsgTerminateLogon) String() string { return proto.CompactTextString(m) }
func (*MsgTerminateLogon) ProtoMessage()    {}
func (*MsgTerminateLogon) Descriptor() ([]byte, []int) {
	return fileDescriptor_11ceb96bb48cdb91, []int{10}
}
func (m *MsgTerminateLogon) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTerminateLogon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTerminateLogon.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTerminateLogon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTerminateLogon.Merge(m, src)
}
func (m *MsgTerminateLogon) XXX_Size() int {
	return m.Size()
}
func (m *MsgTerminateLogon) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTerminateLogon.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTerminateLogon proto.InternalMessageInfo

func (m *MsgTerminateLogon) GetInitiatorAddress() string {
	if m != nil {
		return m.InitiatorAddress
	}
	return ""
}

func (m *MsgTerminateLogon) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *MsgTerminateLogon) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

type MsgTerminateLogonResponse struct {
}

func (m *MsgTerminateLogonResponse) Reset()         { *m = MsgTerminateLogonResponse{} }
func (m *MsgTerminateLogonResponse) String() string { return proto.CompactTextString(m) }
func (*MsgTerminateLogonResponse) ProtoMessage()    {}
func (*MsgTerminateLogonResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_11ceb96bb48cdb91, []int{11}
}
func (m *MsgTerminateLogonResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTerminateLogonResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTerminateLogonResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTerminateLogonResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTerminateLogonResponse.Merge(m, src)
}
func (m *MsgTerminateLogonResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgTerminateLogonResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTerminateLogonResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTerminateLogonResponse proto.InternalMessageInfo

type MsgLogonReject struct {
	AcceptorAddress string   `protobuf:"bytes,1,opt,name=acceptorAddress,proto3" json:"acceptorAddress,omitempty"`
	SessionID       string   `protobuf:"bytes,2,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Header          *Header  `protobuf:"bytes,3,opt,name=header,proto3" json:"header,omitempty"`
	Text            string   `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	Trailer         *Trailer `protobuf:"bytes,5,opt,name=trailer,proto3" json:"trailer,omitempty"`
}

func (m *MsgLogonReject) Reset()         { *m = MsgLogonReject{} }
func (m *MsgLogonReject) String() string { return proto.CompactTextString(m) }
func (*MsgLogonReject) ProtoMessage()    {}
func (*MsgLogonReject) Descriptor() ([]byte, []int) {
	return fileDescriptor_11ceb96bb48cdb91, []int{12}
}
func (m *MsgLogonReject) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgLogonReject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgLogonReject.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgLogonReject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgLogonReject.Merge(m, src)
}
func (m *MsgLogonReject) XXX_Size() int {
	return m.Size()
}
func (m *MsgLogonReject) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgLogonReject.DiscardUnknown(m)
}

var xxx_messageInfo_MsgLogonReject proto.InternalMessageInfo

func (m *MsgLogonReject) GetAcceptorAddress() string {
	if m != nil {
		return m.AcceptorAddress
	}
	return ""
}

func (m *MsgLogonReject) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *MsgLogonReject) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *MsgLogonReject) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *MsgLogonReject) GetTrailer() *Trailer {
	if m != nil {
		return m.Trailer
	}
	return nil
}

type MsgLogonRejectResponse struct {
}

func (m *MsgLogonRejectResponse) Reset()         { *m = MsgLogonRejectResponse{} }
func (m *MsgLogonRejectResponse) String() string { return proto.CompactTextString(m) }
func (*MsgLogonRejectResponse) ProtoMessage()    {}
func (*MsgLogonRejectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_11ceb96bb48cdb91, []int{13}
}
func (m *MsgLogonRejectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgLogonRejectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgLogonRejectResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgLogonRejectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgLogonRejectResponse.Merge(m, src)
}
func (m *MsgLogonRejectResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgLogonRejectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgLogonRejectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgLogonRejectResponse proto.InternalMessageInfo

type MsgLogoutInitiator struct {
	InitiatorAddress       string                  `protobuf:"bytes,1,opt,name=initiatorAddress,proto3" json:"initiatorAddress,omitempty"`
	SessionID              string                  `protobuf:"bytes,2,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	SessionLogoutInitiator *SessionLogoutInitiator `protobuf:"bytes,3,opt,name=sessionLogoutInitiator,proto3" json:"sessionLogoutInitiator,omitempty"`
}

func (m *MsgLogoutInitiator) Reset()         { *m = MsgLogoutInitiator{} }
func (m *MsgLogoutInitiator) String() string { return proto.CompactTextString(m) }
func (*MsgLogoutInitiator) ProtoMessage()    {}
func (*MsgLogoutInitiator) Descriptor() ([]byte, []int) {
	return fileDescriptor_11ceb96bb48cdb91, []int{14}
}
func (m *MsgLogoutInitiator) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgLogoutInitiator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgLogoutInitiator.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgLogoutInitiator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgLogoutInitiator.Merge(m, src)
}
func (m *MsgLogoutInitiator) XXX_Size() int {
	return m.Size()
}
func (m *MsgLogoutInitiator) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgLogoutInitiator.DiscardUnknown(m)
}

var xxx_messageInfo_MsgLogoutInitiator proto.InternalMessageInfo

func (m *MsgLogoutInitiator) GetInitiatorAddress() string {
	if m != nil {
		return m.InitiatorAddress
	}
	return ""
}

func (m *MsgLogoutInitiator) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *MsgLogoutInitiator) GetSessionLogoutInitiator() *SessionLogoutInitiator {
	if m != nil {
		return m.SessionLogoutInitiator
	}
	return nil
}

type MsgLogoutInitiatorResponse struct {
}

func (m *MsgLogoutInitiatorResponse) Reset()         { *m = MsgLogoutInitiatorResponse{} }
func (m *MsgLogoutInitiatorResponse) String() string { return proto.CompactTextString(m) }
func (*MsgLogoutInitiatorResponse) ProtoMessage()    {}
func (*MsgLogoutInitiatorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_11ceb96bb48cdb91, []int{15}
}
func (m *MsgLogoutInitiatorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgLogoutInitiatorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgLogoutInitiatorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgLogoutInitiatorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgLogoutInitiatorResponse.Merge(m, src)
}
func (m *MsgLogoutInitiatorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgLogoutInitiatorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgLogoutInitiatorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgLogoutInitiatorResponse proto.InternalMessageInfo

type MsgLogoutAcceptor struct {
	AcceptorAddress       string                 `protobuf:"bytes,1,opt,name=acceptorAddress,proto3" json:"acceptorAddress,omitempty"`
	SessionID             string                 `protobuf:"bytes,2,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	SessionLogoutAcceptor *SessionLogoutAcceptor `protobuf:"bytes,3,opt,name=sessionLogoutAcceptor,proto3" json:"sessionLogoutAcceptor,omitempty"`
}

func (m *MsgLogoutAcceptor) Reset()         { *m = MsgLogoutAcceptor{} }
func (m *MsgLogoutAcceptor) String() string { return proto.CompactTextString(m) }
func (*MsgLogoutAcceptor) ProtoMessage()    {}
func (*MsgLogoutAcceptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_11ceb96bb48cdb91, []int{16}
}
func (m *MsgLogoutAcceptor) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgLogoutAcceptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgLogoutAcceptor.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgLogoutAcceptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgLogoutAcceptor.Merge(m, src)
}
func (m *MsgLogoutAcceptor) XXX_Size() int {
	return m.Size()
}
func (m *MsgLogoutAcceptor) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgLogoutAcceptor.DiscardUnknown(m)
}

var xxx_messageInfo_MsgLogoutAcceptor proto.InternalMessageInfo

func (m *MsgLogoutAcceptor) GetAcceptorAddress() string {
	if m != nil {
		return m.AcceptorAddress
	}
	return ""
}

func (m *MsgLogoutAcceptor) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *MsgLogoutAcceptor) GetSessionLogoutAcceptor() *SessionLogoutAcceptor {
	if m != nil {
		return m.SessionLogoutAcceptor
	}
	return nil
}

type MsgLogoutAcceptorResponse struct {
}

func (m *MsgLogoutAcceptorResponse) Reset()         { *m = MsgLogoutAcceptorResponse{} }
func (m *MsgLogoutAcceptorResponse) String() string { return proto.CompactTextString(m) }
func (*MsgLogoutAcceptorResponse) ProtoMessage()    {}
func (*MsgLogoutAcceptorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_11ceb96bb48cdb91, []int{17}
}
func (m *MsgLogoutAcceptorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgLogoutAcceptorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgLogoutAcceptorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgLogoutAcceptorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgLogoutAcceptorResponse.Merge(m, src)
}
func (m *MsgLogoutAcceptorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgLogoutAcceptorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgLogoutAcceptorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgLogoutAcceptorResponse proto.InternalMessageInfo

type MsgNewOrderSingle struct {
	Creator      string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	SessionID    string   `protobuf:"bytes,2,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Header       *Header  `protobuf:"bytes,3,opt,name=header,proto3" json:"header,omitempty"`
	ClOrdID      string   `protobuf:"bytes,4,opt,name=clOrdID,proto3" json:"clOrdID,omitempty"`
	Symbol       string   `protobuf:"bytes,5,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Side         int64    `protobuf:"varint,6,opt,name=side,proto3" json:"side,omitempty"`
	OrderQty     string   `protobuf:"bytes,7,opt,name=orderQty,proto3" json:"orderQty,omitempty"`
	OrdType      int64    `protobuf:"varint,8,opt,name=ordType,proto3" json:"ordType,omitempty"`
	Price        string   `protobuf:"bytes,9,opt,name=price,proto3" json:"price,omitempty"`
	TimeInForce  int64    `protobuf:"varint,10,opt,name=timeInForce,proto3" json:"timeInForce,omitempty"`
	Text         string   `protobuf:"bytes,11,opt,name=text,proto3" json:"text,omitempty"`
	TransactTime string   `protobuf:"bytes,12,opt,name=transactTime,proto3" json:"transactTime,omitempty"`
	Trailer      *Trailer `protobuf:"bytes,13,opt,name=trailer,proto3" json:"trailer,omitempty"`
	Status       string   `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
}

func (m *MsgNewOrderSingle) Reset()         { *m = MsgNewOrderSingle{} }
func (m *MsgNewOrderSingle) String() string { return proto.CompactTextString(m) }
func (*MsgNewOrderSingle) ProtoMessage()    {}
func (*MsgNewOrderSingle) Descriptor() ([]byte, []int) {
	return fileDescriptor_11ceb96bb48cdb91, []int{18}
}
func (m *MsgNewOrderSingle) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgNewOrderSingle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgNewOrderSingle.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgNewOrderSingle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgNewOrderSingle.Merge(m, src)
}
func (m *MsgNewOrderSingle) XXX_Size() int {
	return m.Size()
}
func (m *MsgNewOrderSingle) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgNewOrderSingle.DiscardUnknown(m)
}

var xxx_messageInfo_MsgNewOrderSingle proto.InternalMessageInfo

func (m *MsgNewOrderSingle) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgNewOrderSingle) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *MsgNewOrderSingle) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *MsgNewOrderSingle) GetClOrdID() string {
	if m != nil {
		return m.ClOrdID
	}
	return ""
}

func (m *MsgNewOrderSingle) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *MsgNewOrderSingle) GetSide() int64 {
	if m != nil {
		return m.Side
	}
	return 0
}

func (m *MsgNewOrderSingle) GetOrderQty() string {
	if m != nil {
		return m.OrderQty
	}
	return ""
}

func (m *MsgNewOrderSingle) GetOrdType() int64 {
	if m != nil {
		return m.OrdType
	}
	return 0
}

func (m *MsgNewOrderSingle) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *MsgNewOrderSingle) GetTimeInForce() int64 {
	if m != nil {
		return m.TimeInForce
	}
	return 0
}

func (m *MsgNewOrderSingle) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *MsgNewOrderSingle) GetTransactTime() string {
	if m != nil {
		return m.TransactTime
	}
	return ""
}

func (m *MsgNewOrderSingle) GetTrailer() *Trailer {
	if m != nil {
		return m.Trailer
	}
	return nil
}

func (m *MsgNewOrderSingle) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type MsgNewOrderSingleResponse struct {
}

func (m *MsgNewOrderSingleResponse) Reset()         { *m = MsgNewOrderSingleResponse{} }
func (m *MsgNewOrderSingleResponse) String() string { return proto.CompactTextString(m) }
func (*MsgNewOrderSingleResponse) ProtoMessage()    {}
func (*MsgNewOrderSingleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_11ceb96bb48cdb91, []int{19}
}
func (m *MsgNewOrderSingleResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgNewOrderSingleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgNewOrderSingleResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgNewOrderSingleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgNewOrderSingleResponse.Merge(m, src)
}
func (m *MsgNewOrderSingleResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgNewOrderSingleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgNewOrderSingleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgNewOrderSingleResponse proto.InternalMessageInfo

type MsgOrderCancelRequest struct {
	SessionID   string   `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Header      *Header  `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	OrigClOrdID string   `protobuf:"bytes,3,opt,name=origClOrdID,proto3" json:"origClOrdID,omitempty"`
	ClOrdID     string   `protobuf:"bytes,4,opt,name=clOrdID,proto3" json:"clOrdID,omitempty"`
	Trailer     *Trailer `protobuf:"bytes,5,opt,name=trailer,proto3" json:"trailer,omitempty"`
	Creator     string   `protobuf:"bytes,6,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgOrderCancelRequest) Reset()         { *m = MsgOrderCancelRequest{} }
func (m *MsgOrderCancelRequest) String() string { return proto.CompactTextString(m) }
func (*MsgOrderCancelRequest) ProtoMessage()    {}
func (*MsgOrderCancelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_11ceb96bb48cdb91, []int{20}
}
func (m *MsgOrderCancelRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgOrderCancelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgOrderCancelRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgOrderCancelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgOrderCancelRequest.Merge(m, src)
}
func (m *MsgOrderCancelRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgOrderCancelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgOrderCancelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgOrderCancelRequest proto.InternalMessageInfo

func (m *MsgOrderCancelRequest) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *MsgOrderCancelRequest) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *MsgOrderCancelRequest) GetOrigClOrdID() string {
	if m != nil {
		return m.OrigClOrdID
	}
	return ""
}

func (m *MsgOrderCancelRequest) GetClOrdID() string {
	if m != nil {
		return m.ClOrdID
	}
	return ""
}

func (m *MsgOrderCancelRequest) GetTrailer() *Trailer {
	if m != nil {
		return m.Trailer
	}
	return nil
}

func (m *MsgOrderCancelRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgOrderCancelRequestResponse struct {
}

func (m *MsgOrderCancelRequestResponse) Reset()         { *m = MsgOrderCancelRequestResponse{} }
func (m *MsgOrderCancelRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgOrderCancelRequestResponse) ProtoMessage()    {}
func (*MsgOrderCancelRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_11ceb96bb48cdb91, []int{21}
}
func (m *MsgOrderCancelRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgOrderCancelRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgOrderCancelRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgOrderCancelRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgOrderCancelRequestResponse.Merge(m, src)
}
func (m *MsgOrderCancelRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgOrderCancelRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgOrderCancelRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgOrderCancelRequestResponse proto.InternalMessageInfo

type MsgOrderCancelReject struct {
	SessionID        string   `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Header           *Header  `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	OrderID          string   `protobuf:"bytes,3,opt,name=orderID,proto3" json:"orderID,omitempty"`
	OrigClOrdID      string   `protobuf:"bytes,4,opt,name=origClOrdID,proto3" json:"origClOrdID,omitempty"`
	ClOrdID          string   `protobuf:"bytes,5,opt,name=clOrdID,proto3" json:"clOrdID,omitempty"`
	CxlRejReason     int64    `protobuf:"varint,6,opt,name=cxlRejReason,proto3" json:"cxlRejReason,omitempty"`
	CxlRejResponseTo int64    `protobuf:"varint,7,opt,name=cxlRejResponseTo,proto3" json:"cxlRejResponseTo,omitempty"`
	TransactTime     string   `protobuf:"bytes,8,opt,name=TransactTime,proto3" json:"TransactTime,omitempty"`
	Trailer          *Trailer `protobuf:"bytes,9,opt,name=trailer,proto3" json:"trailer,omitempty"`
	Creator          string   `protobuf:"bytes,10,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgOrderCancelReject) Reset()         { *m = MsgOrderCancelReject{} }
func (m *MsgOrderCancelReject) String() string { return proto.CompactTextString(m) }
func (*MsgOrderCancelReject) ProtoMessage()    {}
func (*MsgOrderCancelReject) Descriptor() ([]byte, []int) {
	return fileDescriptor_11ceb96bb48cdb91, []int{22}
}
func (m *MsgOrderCancelReject) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgOrderCancelReject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgOrderCancelReject.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgOrderCancelReject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgOrderCancelReject.Merge(m, src)
}
func (m *MsgOrderCancelReject) XXX_Size() int {
	return m.Size()
}
func (m *MsgOrderCancelReject) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgOrderCancelReject.DiscardUnknown(m)
}

var xxx_messageInfo_MsgOrderCancelReject proto.InternalMessageInfo

func (m *MsgOrderCancelReject) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *MsgOrderCancelReject) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *MsgOrderCancelReject) GetOrderID() string {
	if m != nil {
		return m.OrderID
	}
	return ""
}

func (m *MsgOrderCancelReject) GetOrigClOrdID() string {
	if m != nil {
		return m.OrigClOrdID
	}
	return ""
}

func (m *MsgOrderCancelReject) GetClOrdID() string {
	if m != nil {
		return m.ClOrdID
	}
	return ""
}

func (m *MsgOrderCancelReject) GetCxlRejReason() int64 {
	if m != nil {
		return m.CxlRejReason
	}
	return 0
}

func (m *MsgOrderCancelReject) GetCxlRejResponseTo() int64 {
	if m != nil {
		return m.CxlRejResponseTo
	}
	return 0
}

func (m *MsgOrderCancelReject) GetTransactTime() string {
	if m != nil {
		return m.TransactTime
	}
	return ""
}

func (m *MsgOrderCancelReject) GetTrailer() *Trailer {
	if m != nil {
		return m.Trailer
	}
	return nil
}

func (m *MsgOrderCancelReject) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgOrderCancelRejectResponse struct {
}

func (m *MsgOrderCancelRejectResponse) Reset()         { *m = MsgOrderCancelRejectResponse{} }
func (m *MsgOrderCancelRejectResponse) String() string { return proto.CompactTextString(m) }
func (*MsgOrderCancelRejectResponse) ProtoMessage()    {}
func (*MsgOrderCancelRejectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_11ceb96bb48cdb91, []int{23}
}
func (m *MsgOrderCancelRejectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgOrderCancelRejectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgOrderCancelRejectResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgOrderCancelRejectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgOrderCancelRejectResponse.Merge(m, src)
}
func (m *MsgOrderCancelRejectResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgOrderCancelRejectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgOrderCancelRejectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgOrderCancelRejectResponse proto.InternalMessageInfo

type MsgOrderExecutionReport struct {
	SessionID    string   `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Header       *Header  `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	ClOrdID      string   `protobuf:"bytes,3,opt,name=clOrdID,proto3" json:"clOrdID,omitempty"`
	OrderID      string   `protobuf:"bytes,4,opt,name=OrderID,proto3" json:"OrderID,omitempty"`
	ExecID       string   `protobuf:"bytes,5,opt,name=execID,proto3" json:"execID,omitempty"`
	OrdStatus    string   `protobuf:"bytes,6,opt,name=ordStatus,proto3" json:"ordStatus,omitempty"`
	ExecType     string   `protobuf:"bytes,7,opt,name=execType,proto3" json:"execType,omitempty"`
	Symbol       string   `protobuf:"bytes,8,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Side         int64    `protobuf:"varint,9,opt,name=side,proto3" json:"side,omitempty"`
	OrderQty     int64    `protobuf:"varint,10,opt,name=orderQty,proto3" json:"orderQty,omitempty"`
	Price        int64    `protobuf:"varint,11,opt,name=price,proto3" json:"price,omitempty"`
	TimeInForce  int64    `protobuf:"varint,12,opt,name=timeInForce,proto3" json:"timeInForce,omitempty"`
	LastPx       int64    `protobuf:"varint,13,opt,name=lastPx,proto3" json:"lastPx,omitempty"`
	LastQty      int64    `protobuf:"varint,14,opt,name=lastQty,proto3" json:"lastQty,omitempty"`
	LeavesQty    int64    `protobuf:"varint,15,opt,name=leavesQty,proto3" json:"leavesQty,omitempty"`
	CumQty       int64    `protobuf:"varint,16,opt,name=cumQty,proto3" json:"cumQty,omitempty"`
	AvgPx        int64    `protobuf:"varint,17,opt,name=avgPx,proto3" json:"avgPx,omitempty"`
	Text         string   `protobuf:"bytes,18,opt,name=text,proto3" json:"text,omitempty"`
	TransactTime string   `protobuf:"bytes,19,opt,name=transactTime,proto3" json:"transactTime,omitempty"`
	Trailer      *Trailer `protobuf:"bytes,20,opt,name=trailer,proto3" json:"trailer,omitempty"`
	Creator      string   `protobuf:"bytes,21,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgOrderExecutionReport) Reset()         { *m = MsgOrderExecutionReport{} }
func (m *MsgOrderExecutionReport) String() string { return proto.CompactTextString(m) }
func (*MsgOrderExecutionReport) ProtoMessage()    {}
func (*MsgOrderExecutionReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_11ceb96bb48cdb91, []int{24}
}
func (m *MsgOrderExecutionReport) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgOrderExecutionReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgOrderExecutionReport.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgOrderExecutionReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgOrderExecutionReport.Merge(m, src)
}
func (m *MsgOrderExecutionReport) XXX_Size() int {
	return m.Size()
}
func (m *MsgOrderExecutionReport) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgOrderExecutionReport.DiscardUnknown(m)
}

var xxx_messageInfo_MsgOrderExecutionReport proto.InternalMessageInfo

func (m *MsgOrderExecutionReport) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func (m *MsgOrderExecutionReport) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *MsgOrderExecutionReport) GetClOrdID() string {
	if m != nil {
		return m.ClOrdID
	}
	return ""
}

func (m *MsgOrderExecutionReport) GetOrderID() string {
	if m != nil {
		return m.OrderID
	}
	return ""
}

func (m *MsgOrderExecutionReport) GetExecID() string {
	if m != nil {
		return m.ExecID
	}
	return ""
}

func (m *MsgOrderExecutionReport) GetOrdStatus() string {
	if m != nil {
		return m.OrdStatus
	}
	return ""
}

func (m *MsgOrderExecutionReport) GetExecType() string {
	if m != nil {
		return m.ExecType
	}
	return ""
}

func (m *MsgOrderExecutionReport) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *MsgOrderExecutionReport) GetSide() int64 {
	if m != nil {
		return m.Side
	}
	return 0
}

func (m *MsgOrderExecutionReport) GetOrderQty() int64 {
	if m != nil {
		return m.OrderQty
	}
	return 0
}

func (m *MsgOrderExecutionReport) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *MsgOrderExecutionReport) GetTimeInForce() int64 {
	if m != nil {
		return m.TimeInForce
	}
	return 0
}

func (m *MsgOrderExecutionReport) GetLastPx() int64 {
	if m != nil {
		return m.LastPx
	}
	return 0
}

func (m *MsgOrderExecutionReport) GetLastQty() int64 {
	if m != nil {
		return m.LastQty
	}
	return 0
}

func (m *MsgOrderExecutionReport) GetLeavesQty() int64 {
	if m != nil {
		return m.LeavesQty
	}
	return 0
}

func (m *MsgOrderExecutionReport) GetCumQty() int64 {
	if m != nil {
		return m.CumQty
	}
	return 0
}

func (m *MsgOrderExecutionReport) GetAvgPx() int64 {
	if m != nil {
		return m.AvgPx
	}
	return 0
}

func (m *MsgOrderExecutionReport) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *MsgOrderExecutionReport) GetTransactTime() string {
	if m != nil {
		return m.TransactTime
	}
	return ""
}

func (m *MsgOrderExecutionReport) GetTrailer() *Trailer {
	if m != nil {
		return m.Trailer
	}
	return nil
}

func (m *MsgOrderExecutionReport) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgOrderExecutionReportResponse struct {
}

func (m *MsgOrderExecutionReportResponse) Reset()         { *m = MsgOrderExecutionReportResponse{} }
func (m *MsgOrderExecutionReportResponse) String() string { return proto.CompactTextString(m) }
func (*MsgOrderExecutionReportResponse) ProtoMessage()    {}
func (*MsgOrderExecutionReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_11ceb96bb48cdb91, []int{25}
}
func (m *MsgOrderExecutionReportResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgOrderExecutionReportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgOrderExecutionReportResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgOrderExecutionReportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgOrderExecutionReportResponse.Merge(m, src)
}
func (m *MsgOrderExecutionReportResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgOrderExecutionReportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgOrderExecutionReportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgOrderExecutionReportResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateAccount)(nil), "jim380.re.fix.MsgCreateAccount")
	proto.RegisterType((*MsgCreateAccountResponse)(nil), "jim380.re.fix.MsgCreateAccountResponse")
	proto.RegisterType((*MsgUpdateAccount)(nil), "jim380.re.fix.MsgUpdateAccount")
	proto.RegisterType((*MsgUpdateAccountResponse)(nil), "jim380.re.fix.MsgUpdateAccountResponse")
	proto.RegisterType((*MsgDeleteAccount)(nil), "jim380.re.fix.MsgDeleteAccount")
	proto.RegisterType((*MsgDeleteAccountResponse)(nil), "jim380.re.fix.MsgDeleteAccountResponse")
	proto.RegisterType((*MsgLogonInitiator)(nil), "jim380.re.fix.MsgLogonInitiator")
	proto.RegisterType((*MsgLogonInitiatorResponse)(nil), "jim380.re.fix.MsgLogonInitiatorResponse")
	proto.RegisterType((*MsgLogonAcceptor)(nil), "jim380.re.fix.MsgLogonAcceptor")
	proto.RegisterType((*MsgLogonAcceptorResponse)(nil), "jim380.re.fix.MsgLogonAcceptorResponse")
	proto.RegisterType((*MsgTerminateLogon)(nil), "jim380.re.fix.MsgTerminateLogon")
	proto.RegisterType((*MsgTerminateLogonResponse)(nil), "jim380.re.fix.MsgTerminateLogonResponse")
	proto.RegisterType((*MsgLogonReject)(nil), "jim380.re.fix.MsgLogonReject")
	proto.RegisterType((*MsgLogonRejectResponse)(nil), "jim380.re.fix.MsgLogonRejectResponse")
	proto.RegisterType((*MsgLogoutInitiator)(nil), "jim380.re.fix.MsgLogoutInitiator")
	proto.RegisterType((*MsgLogoutInitiatorResponse)(nil), "jim380.re.fix.MsgLogoutInitiatorResponse")
	proto.RegisterType((*MsgLogoutAcceptor)(nil), "jim380.re.fix.MsgLogoutAcceptor")
	proto.RegisterType((*MsgLogoutAcceptorResponse)(nil), "jim380.re.fix.MsgLogoutAcceptorResponse")
	proto.RegisterType((*MsgNewOrderSingle)(nil), "jim380.re.fix.MsgNewOrderSingle")
	proto.RegisterType((*MsgNewOrderSingleResponse)(nil), "jim380.re.fix.MsgNewOrderSingleResponse")
	proto.RegisterType((*MsgOrderCancelRequest)(nil), "jim380.re.fix.MsgOrderCancelRequest")
	proto.RegisterType((*MsgOrderCancelRequestResponse)(nil), "jim380.re.fix.MsgOrderCancelRequestResponse")
	proto.RegisterType((*MsgOrderCancelReject)(nil), "jim380.re.fix.MsgOrderCancelReject")
	proto.RegisterType((*MsgOrderCancelRejectResponse)(nil), "jim380.re.fix.MsgOrderCancelRejectResponse")
	proto.RegisterType((*MsgOrderExecutionReport)(nil), "jim380.re.fix.MsgOrderExecutionReport")
	proto.RegisterType((*MsgOrderExecutionReportResponse)(nil), "jim380.re.fix.MsgOrderExecutionReportResponse")
}

func init() { proto.RegisterFile("re/fix/tx.proto", fileDescriptor_11ceb96bb48cdb91) }

var fileDescriptor_11ceb96bb48cdb91 = []byte{
	// 1348 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x58, 0x4f, 0x73, 0xdb, 0x44,
	0x14, 0xaf, 0xe2, 0xc4, 0x89, 0x9f, 0xf3, 0x57, 0x24, 0x41, 0xb8, 0x89, 0xe3, 0x9a, 0x16, 0x02,
	0x14, 0xa7, 0x93, 0x5e, 0x18, 0x0e, 0xcc, 0xa4, 0x49, 0x19, 0x32, 0xd3, 0x34, 0x45, 0x31, 0x87,
	0x76, 0x60, 0x32, 0x8a, 0xf4, 0xea, 0xa8, 0xc8, 0x92, 0xd1, 0xae, 0x5b, 0xe7, 0x5b, 0xf0, 0x51,
	0xb8, 0x71, 0xe2, 0xc6, 0x81, 0x0b, 0x33, 0x3d, 0x31, 0x1c, 0x38, 0x74, 0x92, 0x2b, 0xc3, 0x9d,
	0x1b, 0xb3, 0xab, 0xd5, 0x5a, 0x2b, 0xaf, 0xed, 0xa4, 0x93, 0x0b, 0x37, 0xbf, 0xf7, 0x7e, 0xfb,
	0xf6, 0xfd, 0xde, 0x7b, 0xfb, 0xb4, 0x6b, 0x58, 0x88, 0x71, 0xeb, 0xb9, 0xdf, 0xdb, 0xa2, 0xbd,
	0x46, 0x27, 0x8e, 0x68, 0x64, 0xce, 0xbd, 0xf0, 0xdb, 0xf7, 0x3f, 0xbb, 0xd7, 0x88, 0xb1, 0xf1,
	0xdc, 0xef, 0x55, 0x96, 0x85, 0xdd, 0x71, 0xdd, 0xa8, 0x1b, 0xd2, 0x04, 0x54, 0x59, 0x11, 0x5a,
	0x82, 0x84, 0xf8, 0x51, 0x48, 0x84, 0x7a, 0x3d, 0x55, 0x53, 0x27, 0xf4, 0x9c, 0xd8, 0x3b, 0x6e,
	0x23, 0x21, 0x4e, 0x0b, 0x85, 0xf9, 0xa6, 0xba, 0xea, 0x38, 0x88, 0x5a, 0x51, 0x57, 0xb8, 0xac,
	0xff, 0x6a, 0xc0, 0xe2, 0x01, 0x69, 0xed, 0xc6, 0xe8, 0x50, 0xdc, 0x49, 0x76, 0x33, 0x2d, 0x98,
	0x76, 0x99, 0x22, 0x8a, 0x2d, 0xa3, 0x66, 0x6c, 0x96, 0xec, 0x54, 0x34, 0x17, 0xa1, 0xe0, 0xf9,
	0x9e, 0x35, 0xc1, 0xb5, 0xec, 0xa7, 0x59, 0x83, 0xb2, 0x1b, 0xb5, 0x3b, 0x4e, 0x78, 0xf6, 0xd8,
	0x69, 0xa3, 0x55, 0xe0, 0x96, 0xac, 0x8a, 0x79, 0x7b, 0x85, 0x27, 0xc4, 0xa7, 0x68, 0x4d, 0x26,
	0xde, 0x84, 0x68, 0x7e, 0x0c, 0x8b, 0x24, 0x72, 0x7d, 0x27, 0x38, 0x40, 0xcf, 0x77, 0x1e, 0xf9,
	0xe1, 0xf7, 0xc4, 0x9a, 0xe2, 0x90, 0x01, 0xbd, 0xb9, 0x06, 0x25, 0x1e, 0x04, 0x7a, 0x3b, 0xd4,
	0x2a, 0xd6, 0x8c, 0xcd, 0x29, 0xbb, 0xaf, 0xa8, 0xdf, 0x05, 0x2b, 0xcf, 0xc2, 0x46, 0xd2, 0x89,
	0x42, 0x82, 0x69, 0xcc, 0x86, 0x8c, 0x39, 0x25, 0xfd, 0x4d, 0xc7, 0xfb, 0x5f, 0x93, 0xae, 0x70,
	0xd2, 0x0a, 0x8b, 0x94, 0x74, 0xfd, 0x0b, 0xce, 0x70, 0x0f, 0x03, 0x7c, 0x2b, 0x86, 0xc2, 0xb7,
	0xb2, 0x5e, 0xfa, 0xfe, 0xcb, 0x80, 0xa5, 0x03, 0xd2, 0x7a, 0x14, 0xb5, 0xa2, 0x70, 0x3f, 0xf4,
	0xa9, 0xcf, 0x7d, 0xac, 0x41, 0x49, 0x74, 0xd8, 0xfe, 0x9e, 0xf0, 0xdf, 0x57, 0x98, 0x0f, 0x61,
	0x3e, 0x50, 0xf0, 0x7c, 0xb3, 0xf2, 0xf6, 0x7a, 0x43, 0x69, 0xfc, 0x86, 0xea, 0xd4, 0xce, 0x2d,
	0x32, 0x57, 0xa1, 0x48, 0xa8, 0x43, 0xbb, 0x44, 0xe4, 0x5c, 0x48, 0x66, 0x15, 0x60, 0x9f, 0xec,
	0xb8, 0x2e, 0x76, 0x28, 0x7a, 0x3c, 0xe3, 0x33, 0x76, 0x46, 0xc3, 0x92, 0xee, 0xa7, 0x4e, 0x76,
	0x3c, 0x2f, 0x46, 0x22, 0x93, 0x9e, 0xd7, 0xd7, 0x6f, 0xc2, 0x7b, 0x03, 0xec, 0x24, 0xf7, 0x3f,
	0x92, 0xd6, 0xe1, 0xd6, 0xc4, 0xfb, 0x58, 0xea, 0x0f, 0x60, 0x2e, 0xc8, 0xc2, 0x05, 0xf3, 0x35,
	0x1d, 0xf3, 0x14, 0x63, 0xab, 0x4b, 0xde, 0x9a, 0xf7, 0x26, 0x2c, 0x38, 0xc2, 0x87, 0x4a, 0x3b,
	0xaf, 0x16, 0x05, 0x57, 0x83, 0x48, 0x49, 0x47, 0xbc, 0xde, 0x4d, 0x8c, 0xdb, 0x7e, 0xe8, 0x50,
	0xe4, 0x20, 0x6d, 0x4a, 0x0d, 0x7d, 0x4a, 0xd5, 0x04, 0x4d, 0xe4, 0x13, 0x24, 0xba, 0xaf, 0xd0,
	0xef, 0xbe, 0xa4, 0x04, 0xea, 0x86, 0x32, 0x9a, 0xdf, 0x0d, 0x98, 0x4f, 0x43, 0xb5, 0xf1, 0x05,
	0xba, 0x54, 0x47, 0xd3, 0xd0, 0xd2, 0x1c, 0x13, 0xc9, 0xa7, 0x50, 0x3c, 0x45, 0xc7, 0xc3, 0x98,
	0x07, 0x53, 0xde, 0x5e, 0xc9, 0xd5, 0xe8, 0x2b, 0x6e, 0xb4, 0x05, 0xc8, 0x34, 0x61, 0x92, 0x62,
	0x8f, 0x8a, 0x13, 0xce, 0x7f, 0x9b, 0xf7, 0x60, 0x9a, 0xc6, 0x8e, 0x1f, 0x60, 0xcc, 0x33, 0x5d,
	0xde, 0x5e, 0xcd, 0xf9, 0x68, 0x26, 0x56, 0x3b, 0x85, 0xd5, 0x2d, 0x58, 0x55, 0xe9, 0x48, 0xa6,
	0xbf, 0x18, 0x60, 0x0a, 0x53, 0x97, 0xf6, 0x0f, 0xc1, 0xf5, 0x65, 0xfe, 0x3b, 0x58, 0x15, 0x42,
	0x6e, 0x0f, 0xc1, 0xff, 0x4e, 0x2e, 0xf6, 0x23, 0x2d, 0xd8, 0x1e, 0xe2, 0xa4, 0xbe, 0x06, 0x95,
	0xc1, 0xf0, 0x25, 0xbb, 0x9f, 0xfb, 0x63, 0xa4, 0x4b, 0x65, 0xa7, 0x5f, 0x57, 0x29, 0x9f, 0xc1,
	0x8a, 0x12, 0x95, 0x3c, 0x7d, 0x09, 0xb3, 0xdb, 0xa3, 0x98, 0xc9, 0x03, 0xa0, 0x77, 0x91, 0x99,
	0x10, 0x19, 0x6c, 0x4a, 0xeb, 0xa7, 0x02, 0xa7, 0xf5, 0x18, 0x5f, 0x1d, 0xc6, 0x1e, 0xc6, 0x47,
	0x7e, 0xd8, 0x0a, 0x70, 0xc4, 0xec, 0xbd, 0xd6, 0x8e, 0x64, 0xdb, 0x04, 0x87, 0xb1, 0xb7, 0xbf,
	0x97, 0x7e, 0x76, 0x84, 0xc8, 0x27, 0xc8, 0x59, 0xfb, 0x24, 0x0a, 0xc4, 0x00, 0x10, 0x12, 0xeb,
	0x61, 0xe2, 0x7b, 0xc8, 0xbf, 0x2e, 0x05, 0x9b, 0xff, 0x36, 0x2b, 0x30, 0x13, 0xb1, 0xd8, 0xbf,
	0xa6, 0x67, 0xd6, 0x34, 0x47, 0x4b, 0x99, 0xed, 0x10, 0xc5, 0x5e, 0xf3, 0xac, 0x83, 0xd6, 0x0c,
	0x5f, 0x92, 0x8a, 0xe6, 0x32, 0x4c, 0x75, 0x62, 0xdf, 0x45, 0xab, 0xc4, 0x97, 0x24, 0x02, 0xfb,
	0x54, 0x52, 0xbf, 0x8d, 0xfb, 0xe1, 0x97, 0x51, 0xec, 0xa2, 0x05, 0x7c, 0x4d, 0x56, 0x25, 0x4f,
	0x51, 0x39, 0x73, 0x8a, 0xea, 0x30, 0x4b, 0x63, 0x27, 0x24, 0x8e, 0x4b, 0x9b, 0x7e, 0x1b, 0xad,
	0x59, 0x6e, 0x53, 0x74, 0xd9, 0x93, 0x36, 0x77, 0xa9, 0x93, 0x96, 0x99, 0xa2, 0xf3, 0xd9, 0x29,
	0x2a, 0xea, 0xa9, 0x56, 0x4c, 0xd6, 0xf3, 0x6f, 0x03, 0x56, 0x0e, 0x48, 0x8b, 0x9b, 0x76, 0x9d,
	0xd0, 0xc5, 0xc0, 0xc6, 0x1f, 0xba, 0x48, 0xe8, 0x98, 0xb1, 0xdf, 0xaf, 0xdc, 0xc4, 0x65, 0x2a,
	0x57, 0x83, 0x72, 0x14, 0xfb, 0xad, 0x5d, 0x51, 0x3d, 0x71, 0xa5, 0xc8, 0xa8, 0x46, 0xd4, 0xf6,
	0xca, 0x33, 0x27, 0xdb, 0x8e, 0x45, 0xa5, 0x1d, 0xeb, 0x1b, 0xb0, 0xae, 0x65, 0x2b, 0xf3, 0xf1,
	0xef, 0x04, 0x2c, 0xe7, 0x11, 0x7c, 0x08, 0x5f, 0x6b, 0x3a, 0x92, 0x36, 0xc3, 0x58, 0xa6, 0x22,
	0x15, 0xf3, 0x89, 0x9a, 0x1c, 0x99, 0xa8, 0x29, 0x35, 0x51, 0x75, 0x98, 0x75, 0x7b, 0x2c, 0x5e,
	0x1b, 0x1d, 0x12, 0x85, 0xa2, 0xe9, 0x15, 0x1d, 0x9b, 0xae, 0xa9, 0x9c, 0x30, 0x6e, 0x46, 0xfc,
	0x10, 0x14, 0xec, 0x01, 0x3d, 0xf3, 0xd7, 0xcc, 0xb6, 0xe9, 0x4c, 0xd2, 0xa6, 0xcd, 0x21, 0x6d,
	0x5a, 0xba, 0x72, 0x71, 0x40, 0x2d, 0x4e, 0x15, 0xd6, 0x74, 0xa9, 0x97, 0xb5, 0xf9, 0x67, 0x12,
	0xde, 0x4d, 0x01, 0x0f, 0x7b, 0xe8, 0x76, 0xa9, 0xcf, 0x3e, 0x2a, 0x9d, 0x28, 0xbe, 0xfe, 0xf2,
	0xb8, 0x4a, 0xa7, 0xca, 0x14, 0x5b, 0x30, 0x7d, 0x28, 0x0a, 0x27, 0xba, 0x54, 0x88, 0xec, 0xf4,
	0x61, 0x0f, 0x5d, 0x59, 0x15, 0x21, 0xb1, 0xc0, 0xa2, 0xd8, 0x3b, 0x4a, 0x0e, 0x66, 0xd2, 0x8d,
	0x7d, 0x05, 0x9b, 0x45, 0x0c, 0xc7, 0x07, 0x8e, 0x98, 0x45, 0xa9, 0x9c, 0x99, 0x69, 0x33, 0xda,
	0x99, 0x56, 0x1a, 0x32, 0xd3, 0x92, 0x21, 0xd4, 0x9f, 0x69, 0x72, 0x72, 0x95, 0xb9, 0x41, 0x3f,
	0xb9, 0x66, 0x07, 0x27, 0xd7, 0x2a, 0x14, 0x03, 0x87, 0xd0, 0x27, 0x3d, 0x3e, 0x80, 0x0a, 0xb6,
	0x90, 0x58, 0x0e, 0xd8, 0x2f, 0xb6, 0xd5, 0x7c, 0x32, 0x23, 0x85, 0xc8, 0xb8, 0x06, 0xe8, 0xbc,
	0x44, 0xc2, 0x6c, 0x0b, 0xdc, 0xd6, 0x57, 0x30, 0x7f, 0x6e, 0xb7, 0xcd, 0x4c, 0x8b, 0x89, 0xbf,
	0x44, 0x62, 0xf1, 0x39, 0x2f, 0x5b, 0x4f, 0x7a, 0xd6, 0x52, 0x12, 0x1f, 0x17, 0xe4, 0xdc, 0x34,
	0x47, 0xcc, 0xcd, 0x77, 0x46, 0xcf, 0xcd, 0xe5, 0x2b, 0x37, 0xe4, 0x8a, 0xda, 0x90, 0xb7, 0x60,
	0x63, 0x48, 0xbf, 0xa5, 0x3d, 0xb9, 0xfd, 0xa6, 0x04, 0x85, 0x03, 0xd2, 0x32, 0x9f, 0xc2, 0x9c,
	0xfa, 0xca, 0xdc, 0xc8, 0x6d, 0x9b, 0x7f, 0xc0, 0x55, 0x3e, 0x1c, 0x03, 0x90, 0x2f, 0xbc, 0xa7,
	0x30, 0xa7, 0xbe, 0xe5, 0x34, 0xae, 0x15, 0x80, 0xce, 0xb5, 0xf6, 0x1d, 0xc5, 0x5c, 0xab, 0x8f,
	0x28, 0x8d, 0x6b, 0x05, 0xa0, 0x73, 0xad, 0x7d, 0x46, 0x99, 0xdf, 0xc2, 0x7c, 0xee, 0x09, 0x55,
	0x1b, 0x5c, 0xaa, 0x22, 0x2a, 0x9b, 0xe3, 0x10, 0xd9, 0xc0, 0xd5, 0x47, 0xca, 0xc6, 0x90, 0xa5,
	0x29, 0x40, 0x17, 0xb8, 0xf6, 0x39, 0xc0, 0x02, 0xcf, 0xbd, 0x05, 0x34, 0x81, 0xab, 0x08, 0x5d,
	0xe0, 0xfa, 0xeb, 0xbd, 0x79, 0x04, 0xe5, 0xec, 0xd5, 0x7e, 0x7d, 0x48, 0x54, 0x89, 0xb9, 0x72,
	0x67, 0xa4, 0x59, 0x3a, 0x3d, 0x86, 0x85, 0xfc, 0x2d, 0xfa, 0x96, 0x7e, 0x65, 0x06, 0x52, 0xf9,
	0x68, 0x2c, 0x24, 0x5f, 0xcc, 0xcc, 0x45, 0xb6, 0x36, 0x6c, 0xb1, 0x4c, 0xf8, 0xe6, 0x38, 0x44,
	0xd6, 0x7b, 0xee, 0x3e, 0xa9, 0xf1, 0xae, 0x22, 0x74, 0xde, 0xf5, 0x37, 0x1c, 0xf3, 0x14, 0x4c,
	0xcd, 0xed, 0xe6, 0xf6, 0xe0, 0xfa, 0x41, 0x54, 0xe5, 0xee, 0x65, 0x50, 0x72, 0x27, 0x84, 0xa5,
	0xc1, 0x7b, 0xc3, 0xfb, 0x63, 0x5c, 0xf0, 0x3a, 0x7f, 0x72, 0x09, 0x90, 0xdc, 0x26, 0x84, 0x65,
	0xed, 0x27, 0xf0, 0x83, 0x21, 0x4e, 0x72, 0xb8, 0x4a, 0xe3, 0x72, 0xb8, 0x74, 0xbf, 0x07, 0x9f,
	0xff, 0x76, 0x5e, 0x35, 0x5e, 0x9f, 0x57, 0x8d, 0x37, 0xe7, 0x55, 0xe3, 0xc7, 0x8b, 0xea, 0x8d,
	0xd7, 0x17, 0xd5, 0x1b, 0x7f, 0x5e, 0x54, 0x6f, 0x3c, 0xab, 0xb5, 0x7c, 0x7a, 0xda, 0x3d, 0x69,
	0xb8, 0x51, 0x7b, 0x2b, 0xf1, 0xb9, 0x65, 0xe3, 0x56, 0x2f, 0xf9, 0xef, 0xef, 0xac, 0x83, 0xe4,
	0xa4, 0xc8, 0xff, 0x87, 0xbb, 0xff, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0f, 0x76, 0x00, 0xf8,
	0x12, 0x14, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateAccount(ctx context.Context, in *MsgCreateAccount, opts ...grpc.CallOption) (*MsgCreateAccountResponse, error)
	UpdateAccount(ctx context.Context, in *MsgUpdateAccount, opts ...grpc.CallOption) (*MsgUpdateAccountResponse, error)
	DeleteAccount(ctx context.Context, in *MsgDeleteAccount, opts ...grpc.CallOption) (*MsgDeleteAccountResponse, error)
	LogonInitiator(ctx context.Context, in *MsgLogonInitiator, opts ...grpc.CallOption) (*MsgLogonInitiatorResponse, error)
	LogonAcceptor(ctx context.Context, in *MsgLogonAcceptor, opts ...grpc.CallOption) (*MsgLogonAcceptorResponse, error)
	TerminateLogon(ctx context.Context, in *MsgTerminateLogon, opts ...grpc.CallOption) (*MsgTerminateLogonResponse, error)
	LogonReject(ctx context.Context, in *MsgLogonReject, opts ...grpc.CallOption) (*MsgLogonRejectResponse, error)
	LogoutInitiator(ctx context.Context, in *MsgLogoutInitiator, opts ...grpc.CallOption) (*MsgLogoutInitiatorResponse, error)
	LogoutAcceptor(ctx context.Context, in *MsgLogoutAcceptor, opts ...grpc.CallOption) (*MsgLogoutAcceptorResponse, error)
	NewOrderSingle(ctx context.Context, in *MsgNewOrderSingle, opts ...grpc.CallOption) (*MsgNewOrderSingleResponse, error)
	OrderCancelRequest(ctx context.Context, in *MsgOrderCancelRequest, opts ...grpc.CallOption) (*MsgOrderCancelRequestResponse, error)
	OrderCancelReject(ctx context.Context, in *MsgOrderCancelReject, opts ...grpc.CallOption) (*MsgOrderCancelRejectResponse, error)
	OrderExecutionReport(ctx context.Context, in *MsgOrderExecutionReport, opts ...grpc.CallOption) (*MsgOrderExecutionReportResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateAccount(ctx context.Context, in *MsgCreateAccount, opts ...grpc.CallOption) (*MsgCreateAccountResponse, error) {
	out := new(MsgCreateAccountResponse)
	err := c.cc.Invoke(ctx, "/jim380.re.fix.Msg/CreateAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateAccount(ctx context.Context, in *MsgUpdateAccount, opts ...grpc.CallOption) (*MsgUpdateAccountResponse, error) {
	out := new(MsgUpdateAccountResponse)
	err := c.cc.Invoke(ctx, "/jim380.re.fix.Msg/UpdateAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteAccount(ctx context.Context, in *MsgDeleteAccount, opts ...grpc.CallOption) (*MsgDeleteAccountResponse, error) {
	out := new(MsgDeleteAccountResponse)
	err := c.cc.Invoke(ctx, "/jim380.re.fix.Msg/DeleteAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) LogonInitiator(ctx context.Context, in *MsgLogonInitiator, opts ...grpc.CallOption) (*MsgLogonInitiatorResponse, error) {
	out := new(MsgLogonInitiatorResponse)
	err := c.cc.Invoke(ctx, "/jim380.re.fix.Msg/LogonInitiator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) LogonAcceptor(ctx context.Context, in *MsgLogonAcceptor, opts ...grpc.CallOption) (*MsgLogonAcceptorResponse, error) {
	out := new(MsgLogonAcceptorResponse)
	err := c.cc.Invoke(ctx, "/jim380.re.fix.Msg/LogonAcceptor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) TerminateLogon(ctx context.Context, in *MsgTerminateLogon, opts ...grpc.CallOption) (*MsgTerminateLogonResponse, error) {
	out := new(MsgTerminateLogonResponse)
	err := c.cc.Invoke(ctx, "/jim380.re.fix.Msg/TerminateLogon", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) LogonReject(ctx context.Context, in *MsgLogonReject, opts ...grpc.CallOption) (*MsgLogonRejectResponse, error) {
	out := new(MsgLogonRejectResponse)
	err := c.cc.Invoke(ctx, "/jim380.re.fix.Msg/LogonReject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) LogoutInitiator(ctx context.Context, in *MsgLogoutInitiator, opts ...grpc.CallOption) (*MsgLogoutInitiatorResponse, error) {
	out := new(MsgLogoutInitiatorResponse)
	err := c.cc.Invoke(ctx, "/jim380.re.fix.Msg/LogoutInitiator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) LogoutAcceptor(ctx context.Context, in *MsgLogoutAcceptor, opts ...grpc.CallOption) (*MsgLogoutAcceptorResponse, error) {
	out := new(MsgLogoutAcceptorResponse)
	err := c.cc.Invoke(ctx, "/jim380.re.fix.Msg/LogoutAcceptor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) NewOrderSingle(ctx context.Context, in *MsgNewOrderSingle, opts ...grpc.CallOption) (*MsgNewOrderSingleResponse, error) {
	out := new(MsgNewOrderSingleResponse)
	err := c.cc.Invoke(ctx, "/jim380.re.fix.Msg/NewOrderSingle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) OrderCancelRequest(ctx context.Context, in *MsgOrderCancelRequest, opts ...grpc.CallOption) (*MsgOrderCancelRequestResponse, error) {
	out := new(MsgOrderCancelRequestResponse)
	err := c.cc.Invoke(ctx, "/jim380.re.fix.Msg/OrderCancelRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) OrderCancelReject(ctx context.Context, in *MsgOrderCancelReject, opts ...grpc.CallOption) (*MsgOrderCancelRejectResponse, error) {
	out := new(MsgOrderCancelRejectResponse)
	err := c.cc.Invoke(ctx, "/jim380.re.fix.Msg/OrderCancelReject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) OrderExecutionReport(ctx context.Context, in *MsgOrderExecutionReport, opts ...grpc.CallOption) (*MsgOrderExecutionReportResponse, error) {
	out := new(MsgOrderExecutionReportResponse)
	err := c.cc.Invoke(ctx, "/jim380.re.fix.Msg/OrderExecutionReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateAccount(context.Context, *MsgCreateAccount) (*MsgCreateAccountResponse, error)
	UpdateAccount(context.Context, *MsgUpdateAccount) (*MsgUpdateAccountResponse, error)
	DeleteAccount(context.Context, *MsgDeleteAccount) (*MsgDeleteAccountResponse, error)
	LogonInitiator(context.Context, *MsgLogonInitiator) (*MsgLogonInitiatorResponse, error)
	LogonAcceptor(context.Context, *MsgLogonAcceptor) (*MsgLogonAcceptorResponse, error)
	TerminateLogon(context.Context, *MsgTerminateLogon) (*MsgTerminateLogonResponse, error)
	LogonReject(context.Context, *MsgLogonReject) (*MsgLogonRejectResponse, error)
	LogoutInitiator(context.Context, *MsgLogoutInitiator) (*MsgLogoutInitiatorResponse, error)
	LogoutAcceptor(context.Context, *MsgLogoutAcceptor) (*MsgLogoutAcceptorResponse, error)
	NewOrderSingle(context.Context, *MsgNewOrderSingle) (*MsgNewOrderSingleResponse, error)
	OrderCancelRequest(context.Context, *MsgOrderCancelRequest) (*MsgOrderCancelRequestResponse, error)
	OrderCancelReject(context.Context, *MsgOrderCancelReject) (*MsgOrderCancelRejectResponse, error)
	OrderExecutionReport(context.Context, *MsgOrderExecutionReport) (*MsgOrderExecutionReportResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateAccount(ctx context.Context, req *MsgCreateAccount) (*MsgCreateAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAccount not implemented")
}
func (*UnimplementedMsgServer) UpdateAccount(ctx context.Context, req *MsgUpdateAccount) (*MsgUpdateAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAccount not implemented")
}
func (*UnimplementedMsgServer) DeleteAccount(ctx context.Context, req *MsgDeleteAccount) (*MsgDeleteAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAccount not implemented")
}
func (*UnimplementedMsgServer) LogonInitiator(ctx context.Context, req *MsgLogonInitiator) (*MsgLogonInitiatorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogonInitiator not implemented")
}
func (*UnimplementedMsgServer) LogonAcceptor(ctx context.Context, req *MsgLogonAcceptor) (*MsgLogonAcceptorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogonAcceptor not implemented")
}
func (*UnimplementedMsgServer) TerminateLogon(ctx context.Context, req *MsgTerminateLogon) (*MsgTerminateLogonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TerminateLogon not implemented")
}
func (*UnimplementedMsgServer) LogonReject(ctx context.Context, req *MsgLogonReject) (*MsgLogonRejectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogonReject not implemented")
}
func (*UnimplementedMsgServer) LogoutInitiator(ctx context.Context, req *MsgLogoutInitiator) (*MsgLogoutInitiatorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogoutInitiator not implemented")
}
func (*UnimplementedMsgServer) LogoutAcceptor(ctx context.Context, req *MsgLogoutAcceptor) (*MsgLogoutAcceptorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LogoutAcceptor not implemented")
}
func (*UnimplementedMsgServer) NewOrderSingle(ctx context.Context, req *MsgNewOrderSingle) (*MsgNewOrderSingleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewOrderSingle not implemented")
}
func (*UnimplementedMsgServer) OrderCancelRequest(ctx context.Context, req *MsgOrderCancelRequest) (*MsgOrderCancelRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrderCancelRequest not implemented")
}
func (*UnimplementedMsgServer) OrderCancelReject(ctx context.Context, req *MsgOrderCancelReject) (*MsgOrderCancelRejectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrderCancelReject not implemented")
}
func (*UnimplementedMsgServer) OrderExecutionReport(ctx context.Context, req *MsgOrderExecutionReport) (*MsgOrderExecutionReportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OrderExecutionReport not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jim380.re.fix.Msg/CreateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateAccount(ctx, req.(*MsgCreateAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jim380.re.fix.Msg/UpdateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateAccount(ctx, req.(*MsgUpdateAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jim380.re.fix.Msg/DeleteAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteAccount(ctx, req.(*MsgDeleteAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_LogonInitiator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgLogonInitiator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).LogonInitiator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jim380.re.fix.Msg/LogonInitiator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).LogonInitiator(ctx, req.(*MsgLogonInitiator))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_LogonAcceptor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgLogonAcceptor)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).LogonAcceptor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jim380.re.fix.Msg/LogonAcceptor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).LogonAcceptor(ctx, req.(*MsgLogonAcceptor))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_TerminateLogon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgTerminateLogon)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).TerminateLogon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jim380.re.fix.Msg/TerminateLogon",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).TerminateLogon(ctx, req.(*MsgTerminateLogon))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_LogonReject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgLogonReject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).LogonReject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jim380.re.fix.Msg/LogonReject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).LogonReject(ctx, req.(*MsgLogonReject))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_LogoutInitiator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgLogoutInitiator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).LogoutInitiator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jim380.re.fix.Msg/LogoutInitiator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).LogoutInitiator(ctx, req.(*MsgLogoutInitiator))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_LogoutAcceptor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgLogoutAcceptor)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).LogoutAcceptor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jim380.re.fix.Msg/LogoutAcceptor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).LogoutAcceptor(ctx, req.(*MsgLogoutAcceptor))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_NewOrderSingle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgNewOrderSingle)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).NewOrderSingle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jim380.re.fix.Msg/NewOrderSingle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).NewOrderSingle(ctx, req.(*MsgNewOrderSingle))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_OrderCancelRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgOrderCancelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).OrderCancelRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jim380.re.fix.Msg/OrderCancelRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).OrderCancelRequest(ctx, req.(*MsgOrderCancelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_OrderCancelReject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgOrderCancelReject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).OrderCancelReject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jim380.re.fix.Msg/OrderCancelReject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).OrderCancelReject(ctx, req.(*MsgOrderCancelReject))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_OrderExecutionReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgOrderExecutionReport)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).OrderExecutionReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jim380.re.fix.Msg/OrderExecutionReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).OrderExecutionReport(ctx, req.(*MsgOrderExecutionReport))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "jim380.re.fix.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAccount",
			Handler:    _Msg_CreateAccount_Handler,
		},
		{
			MethodName: "UpdateAccount",
			Handler:    _Msg_UpdateAccount_Handler,
		},
		{
			MethodName: "DeleteAccount",
			Handler:    _Msg_DeleteAccount_Handler,
		},
		{
			MethodName: "LogonInitiator",
			Handler:    _Msg_LogonInitiator_Handler,
		},
		{
			MethodName: "LogonAcceptor",
			Handler:    _Msg_LogonAcceptor_Handler,
		},
		{
			MethodName: "TerminateLogon",
			Handler:    _Msg_TerminateLogon_Handler,
		},
		{
			MethodName: "LogonReject",
			Handler:    _Msg_LogonReject_Handler,
		},
		{
			MethodName: "LogoutInitiator",
			Handler:    _Msg_LogoutInitiator_Handler,
		},
		{
			MethodName: "LogoutAcceptor",
			Handler:    _Msg_LogoutAcceptor_Handler,
		},
		{
			MethodName: "NewOrderSingle",
			Handler:    _Msg_NewOrderSingle_Handler,
		},
		{
			MethodName: "OrderCancelRequest",
			Handler:    _Msg_OrderCancelRequest_Handler,
		},
		{
			MethodName: "OrderCancelReject",
			Handler:    _Msg_OrderCancelReject_Handler,
		},
		{
			MethodName: "OrderExecutionReport",
			Handler:    _Msg_OrderExecutionReport_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "re/fix/tx.proto",
}

func (m *MsgCreateAccount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateAccount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateAccount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CreatedAt != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CreatedAt))
		i--
		dAtA[i] = 0x30
	}
	if len(m.SocialMediaLinks) > 0 {
		i -= len(m.SocialMediaLinks)
		copy(dAtA[i:], m.SocialMediaLinks)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SocialMediaLinks)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Website) > 0 {
		i -= len(m.Website)
		copy(dAtA[i:], m.Website)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Website)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CompanyName) > 0 {
		i -= len(m.CompanyName)
		copy(dAtA[i:], m.CompanyName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CompanyName)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateAccountResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateAccountResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateAccountResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateAccount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateAccount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateAccount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CreatedAt != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CreatedAt))
		i--
		dAtA[i] = 0x30
	}
	if len(m.SocialMediaLinks) > 0 {
		i -= len(m.SocialMediaLinks)
		copy(dAtA[i:], m.SocialMediaLinks)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SocialMediaLinks)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Website) > 0 {
		i -= len(m.Website)
		copy(dAtA[i:], m.Website)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Website)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CompanyName) > 0 {
		i -= len(m.CompanyName)
		copy(dAtA[i:], m.CompanyName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CompanyName)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateAccountResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateAccountResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateAccountResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteAccount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteAccount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteAccount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteAccountResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteAccountResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteAccountResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgLogonInitiator) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgLogonInitiator) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgLogonInitiator) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.InitiatorAddress) > 0 {
		i -= len(m.InitiatorAddress)
		copy(dAtA[i:], m.InitiatorAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.InitiatorAddress)))
		i--
		dAtA[i] = 0x2a
	}
	if m.IsAccepted {
		i--
		if m.IsAccepted {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x1a
	}
	if m.LogonInitiator != nil {
		{
			size, err := m.LogonInitiator.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.SessionID) > 0 {
		i -= len(m.SessionID)
		copy(dAtA[i:], m.SessionID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SessionID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgLogonInitiatorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgLogonInitiatorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgLogonInitiatorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgLogonAcceptor) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgLogonAcceptor) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgLogonAcceptor) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AcceptorAddress) > 0 {
		i -= len(m.AcceptorAddress)
		copy(dAtA[i:], m.AcceptorAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AcceptorAddress)))
		i--
		dAtA[i] = 0x2a
	}
	if m.IsAccepted {
		i--
		if m.IsAccepted {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x1a
	}
	if m.LogonAcceptor != nil {
		{
			size, err := m.LogonAcceptor.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.SessionID) > 0 {
		i -= len(m.SessionID)
		copy(dAtA[i:], m.SessionID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SessionID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgLogonAcceptorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgLogonAcceptorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgLogonAcceptorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgTerminateLogon) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTerminateLogon) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTerminateLogon) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SessionID) > 0 {
		i -= len(m.SessionID)
		copy(dAtA[i:], m.SessionID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SessionID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.InitiatorAddress) > 0 {
		i -= len(m.InitiatorAddress)
		copy(dAtA[i:], m.InitiatorAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.InitiatorAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgTerminateLogonResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTerminateLogonResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTerminateLogonResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgLogonReject) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgLogonReject) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgLogonReject) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Trailer != nil {
		{
			size, err := m.Trailer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0x22
	}
	if m.Header != nil {
		{
			size, err := m.Header.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SessionID) > 0 {
		i -= len(m.SessionID)
		copy(dAtA[i:], m.SessionID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SessionID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AcceptorAddress) > 0 {
		i -= len(m.AcceptorAddress)
		copy(dAtA[i:], m.AcceptorAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AcceptorAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgLogonRejectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgLogonRejectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgLogonRejectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgLogoutInitiator) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgLogoutInitiator) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgLogoutInitiator) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SessionLogoutInitiator != nil {
		{
			size, err := m.SessionLogoutInitiator.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SessionID) > 0 {
		i -= len(m.SessionID)
		copy(dAtA[i:], m.SessionID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SessionID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.InitiatorAddress) > 0 {
		i -= len(m.InitiatorAddress)
		copy(dAtA[i:], m.InitiatorAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.InitiatorAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgLogoutInitiatorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgLogoutInitiatorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgLogoutInitiatorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgLogoutAcceptor) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgLogoutAcceptor) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgLogoutAcceptor) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SessionLogoutAcceptor != nil {
		{
			size, err := m.SessionLogoutAcceptor.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SessionID) > 0 {
		i -= len(m.SessionID)
		copy(dAtA[i:], m.SessionID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SessionID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AcceptorAddress) > 0 {
		i -= len(m.AcceptorAddress)
		copy(dAtA[i:], m.AcceptorAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AcceptorAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgLogoutAcceptorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgLogoutAcceptorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgLogoutAcceptorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgNewOrderSingle) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgNewOrderSingle) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgNewOrderSingle) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x72
	}
	if m.Trailer != nil {
		{
			size, err := m.Trailer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6a
	}
	if len(m.TransactTime) > 0 {
		i -= len(m.TransactTime)
		copy(dAtA[i:], m.TransactTime)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TransactTime)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0x5a
	}
	if m.TimeInForce != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.TimeInForce))
		i--
		dAtA[i] = 0x50
	}
	if len(m.Price) > 0 {
		i -= len(m.Price)
		copy(dAtA[i:], m.Price)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Price)))
		i--
		dAtA[i] = 0x4a
	}
	if m.OrdType != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.OrdType))
		i--
		dAtA[i] = 0x40
	}
	if len(m.OrderQty) > 0 {
		i -= len(m.OrderQty)
		copy(dAtA[i:], m.OrderQty)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OrderQty)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Side != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Side))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Symbol) > 0 {
		i -= len(m.Symbol)
		copy(dAtA[i:], m.Symbol)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Symbol)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ClOrdID) > 0 {
		i -= len(m.ClOrdID)
		copy(dAtA[i:], m.ClOrdID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ClOrdID)))
		i--
		dAtA[i] = 0x22
	}
	if m.Header != nil {
		{
			size, err := m.Header.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SessionID) > 0 {
		i -= len(m.SessionID)
		copy(dAtA[i:], m.SessionID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SessionID)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgNewOrderSingleResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgNewOrderSingleResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgNewOrderSingleResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgOrderCancelRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgOrderCancelRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgOrderCancelRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x32
	}
	if m.Trailer != nil {
		{
			size, err := m.Trailer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ClOrdID) > 0 {
		i -= len(m.ClOrdID)
		copy(dAtA[i:], m.ClOrdID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ClOrdID)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.OrigClOrdID) > 0 {
		i -= len(m.OrigClOrdID)
		copy(dAtA[i:], m.OrigClOrdID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OrigClOrdID)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Header != nil {
		{
			size, err := m.Header.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.SessionID) > 0 {
		i -= len(m.SessionID)
		copy(dAtA[i:], m.SessionID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SessionID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgOrderCancelRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgOrderCancelRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgOrderCancelRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgOrderCancelReject) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgOrderCancelReject) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgOrderCancelReject) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x52
	}
	if m.Trailer != nil {
		{
			size, err := m.Trailer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if len(m.TransactTime) > 0 {
		i -= len(m.TransactTime)
		copy(dAtA[i:], m.TransactTime)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TransactTime)))
		i--
		dAtA[i] = 0x42
	}
	if m.CxlRejResponseTo != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CxlRejResponseTo))
		i--
		dAtA[i] = 0x38
	}
	if m.CxlRejReason != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CxlRejReason))
		i--
		dAtA[i] = 0x30
	}
	if len(m.ClOrdID) > 0 {
		i -= len(m.ClOrdID)
		copy(dAtA[i:], m.ClOrdID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ClOrdID)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.OrigClOrdID) > 0 {
		i -= len(m.OrigClOrdID)
		copy(dAtA[i:], m.OrigClOrdID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OrigClOrdID)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.OrderID) > 0 {
		i -= len(m.OrderID)
		copy(dAtA[i:], m.OrderID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OrderID)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Header != nil {
		{
			size, err := m.Header.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.SessionID) > 0 {
		i -= len(m.SessionID)
		copy(dAtA[i:], m.SessionID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SessionID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgOrderCancelRejectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgOrderCancelRejectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgOrderCancelRejectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgOrderExecutionReport) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgOrderExecutionReport) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgOrderExecutionReport) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	if m.Trailer != nil {
		{
			size, err := m.Trailer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa2
	}
	if len(m.TransactTime) > 0 {
		i -= len(m.TransactTime)
		copy(dAtA[i:], m.TransactTime)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TransactTime)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x9a
	}
	if len(m.Text) > 0 {
		i -= len(m.Text)
		copy(dAtA[i:], m.Text)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Text)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	if m.AvgPx != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.AvgPx))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x88
	}
	if m.CumQty != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CumQty))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x80
	}
	if m.LeavesQty != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LeavesQty))
		i--
		dAtA[i] = 0x78
	}
	if m.LastQty != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LastQty))
		i--
		dAtA[i] = 0x70
	}
	if m.LastPx != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LastPx))
		i--
		dAtA[i] = 0x68
	}
	if m.TimeInForce != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.TimeInForce))
		i--
		dAtA[i] = 0x60
	}
	if m.Price != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Price))
		i--
		dAtA[i] = 0x58
	}
	if m.OrderQty != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.OrderQty))
		i--
		dAtA[i] = 0x50
	}
	if m.Side != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Side))
		i--
		dAtA[i] = 0x48
	}
	if len(m.Symbol) > 0 {
		i -= len(m.Symbol)
		copy(dAtA[i:], m.Symbol)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Symbol)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.ExecType) > 0 {
		i -= len(m.ExecType)
		copy(dAtA[i:], m.ExecType)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ExecType)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.OrdStatus) > 0 {
		i -= len(m.OrdStatus)
		copy(dAtA[i:], m.OrdStatus)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OrdStatus)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.ExecID) > 0 {
		i -= len(m.ExecID)
		copy(dAtA[i:], m.ExecID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ExecID)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.OrderID) > 0 {
		i -= len(m.OrderID)
		copy(dAtA[i:], m.OrderID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OrderID)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ClOrdID) > 0 {
		i -= len(m.ClOrdID)
		copy(dAtA[i:], m.ClOrdID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ClOrdID)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Header != nil {
		{
			size, err := m.Header.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.SessionID) > 0 {
		i -= len(m.SessionID)
		copy(dAtA[i:], m.SessionID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SessionID)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgOrderExecutionReportResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgOrderExecutionReportResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgOrderExecutionReportResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CompanyName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Website)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SocialMediaLinks)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CreatedAt != 0 {
		n += 1 + sovTx(uint64(m.CreatedAt))
	}
	return n
}

func (m *MsgCreateAccountResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CompanyName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Website)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SocialMediaLinks)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CreatedAt != 0 {
		n += 1 + sovTx(uint64(m.CreatedAt))
	}
	return n
}

func (m *MsgUpdateAccountResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteAccountResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgLogonInitiator) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SessionID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.LogonInitiator != nil {
		l = m.LogonInitiator.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.IsAccepted {
		n += 2
	}
	l = len(m.InitiatorAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgLogonInitiatorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgLogonAcceptor) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SessionID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.LogonAcceptor != nil {
		l = m.LogonAcceptor.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.IsAccepted {
		n += 2
	}
	l = len(m.AcceptorAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgLogonAcceptorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgTerminateLogon) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.InitiatorAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SessionID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgTerminateLogonResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgLogonReject) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AcceptorAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SessionID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Header != nil {
		l = m.Header.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Trailer != nil {
		l = m.Trailer.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgLogonRejectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgLogoutInitiator) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.InitiatorAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SessionID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SessionLogoutInitiator != nil {
		l = m.SessionLogoutInitiator.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgLogoutInitiatorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgLogoutAcceptor) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AcceptorAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SessionID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.SessionLogoutAcceptor != nil {
		l = m.SessionLogoutAcceptor.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgLogoutAcceptorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgNewOrderSingle) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SessionID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Header != nil {
		l = m.Header.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ClOrdID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Symbol)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Side != 0 {
		n += 1 + sovTx(uint64(m.Side))
	}
	l = len(m.OrderQty)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.OrdType != 0 {
		n += 1 + sovTx(uint64(m.OrdType))
	}
	l = len(m.Price)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.TimeInForce != 0 {
		n += 1 + sovTx(uint64(m.TimeInForce))
	}
	l = len(m.Text)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TransactTime)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Trailer != nil {
		l = m.Trailer.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgNewOrderSingleResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgOrderCancelRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SessionID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Header != nil {
		l = m.Header.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OrigClOrdID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ClOrdID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Trailer != nil {
		l = m.Trailer.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgOrderCancelRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgOrderCancelReject) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SessionID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Header != nil {
		l = m.Header.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OrderID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OrigClOrdID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ClOrdID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CxlRejReason != 0 {
		n += 1 + sovTx(uint64(m.CxlRejReason))
	}
	if m.CxlRejResponseTo != 0 {
		n += 1 + sovTx(uint64(m.CxlRejResponseTo))
	}
	l = len(m.TransactTime)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Trailer != nil {
		l = m.Trailer.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgOrderCancelRejectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgOrderExecutionReport) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SessionID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Header != nil {
		l = m.Header.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ClOrdID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OrderID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ExecID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OrdStatus)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ExecType)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Symbol)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Side != 0 {
		n += 1 + sovTx(uint64(m.Side))
	}
	if m.OrderQty != 0 {
		n += 1 + sovTx(uint64(m.OrderQty))
	}
	if m.Price != 0 {
		n += 1 + sovTx(uint64(m.Price))
	}
	if m.TimeInForce != 0 {
		n += 1 + sovTx(uint64(m.TimeInForce))
	}
	if m.LastPx != 0 {
		n += 1 + sovTx(uint64(m.LastPx))
	}
	if m.LastQty != 0 {
		n += 1 + sovTx(uint64(m.LastQty))
	}
	if m.LeavesQty != 0 {
		n += 1 + sovTx(uint64(m.LeavesQty))
	}
	if m.CumQty != 0 {
		n += 2 + sovTx(uint64(m.CumQty))
	}
	if m.AvgPx != 0 {
		n += 2 + sovTx(uint64(m.AvgPx))
	}
	l = len(m.Text)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	l = len(m.TransactTime)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	if m.Trailer != nil {
		l = m.Trailer.Size()
		n += 2 + l + sovTx(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgOrderExecutionReportResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateAccount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateAccount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateAccount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompanyName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CompanyName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Website", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Website = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SocialMediaLinks", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SocialMediaLinks = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			m.CreatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedAt |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateAccountResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateAccountResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateAccountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateAccount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateAccount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateAccount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompanyName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CompanyName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Website", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Website = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SocialMediaLinks", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SocialMediaLinks = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			m.CreatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedAt |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateAccountResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateAccountResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateAccountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteAccount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteAccount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteAccount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteAccountResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteAccountResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteAccountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgLogonInitiator) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgLogonInitiator: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgLogonInitiator: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SessionID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LogonInitiator", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LogonInitiator == nil {
				m.LogonInitiator = &LogonInitiator{}
			}
			if err := m.LogonInitiator.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsAccepted", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsAccepted = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitiatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InitiatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgLogonInitiatorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgLogonInitiatorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgLogonInitiatorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgLogonAcceptor) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgLogonAcceptor: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgLogonAcceptor: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SessionID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LogonAcceptor", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LogonAcceptor == nil {
				m.LogonAcceptor = &LogonAcceptor{}
			}
			if err := m.LogonAcceptor.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsAccepted", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsAccepted = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AcceptorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AcceptorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgLogonAcceptorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgLogonAcceptorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgLogonAcceptorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTerminateLogon) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTerminateLogon: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTerminateLogon: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitiatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InitiatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SessionID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTerminateLogonResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTerminateLogonResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTerminateLogonResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgLogonReject) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgLogonReject: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgLogonReject: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AcceptorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AcceptorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SessionID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Header == nil {
				m.Header = &Header{}
			}
			if err := m.Header.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Trailer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Trailer == nil {
				m.Trailer = &Trailer{}
			}
			if err := m.Trailer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgLogonRejectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgLogonRejectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgLogonRejectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgLogoutInitiator) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgLogoutInitiator: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgLogoutInitiator: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitiatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InitiatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SessionID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionLogoutInitiator", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SessionLogoutInitiator == nil {
				m.SessionLogoutInitiator = &SessionLogoutInitiator{}
			}
			if err := m.SessionLogoutInitiator.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgLogoutInitiatorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgLogoutInitiatorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgLogoutInitiatorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgLogoutAcceptor) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgLogoutAcceptor: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgLogoutAcceptor: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AcceptorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AcceptorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SessionID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionLogoutAcceptor", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SessionLogoutAcceptor == nil {
				m.SessionLogoutAcceptor = &SessionLogoutAcceptor{}
			}
			if err := m.SessionLogoutAcceptor.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgLogoutAcceptorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgLogoutAcceptorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgLogoutAcceptorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgNewOrderSingle) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgNewOrderSingle: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgNewOrderSingle: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SessionID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Header == nil {
				m.Header = &Header{}
			}
			if err := m.Header.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClOrdID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClOrdID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Symbol", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Symbol = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Side", wireType)
			}
			m.Side = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Side |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderQty", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrderQty = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrdType", wireType)
			}
			m.OrdType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OrdType |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Price = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimeInForce", wireType)
			}
			m.TimeInForce = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TimeInForce |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TransactTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TransactTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Trailer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Trailer == nil {
				m.Trailer = &Trailer{}
			}
			if err := m.Trailer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgNewOrderSingleResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgNewOrderSingleResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgNewOrderSingleResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgOrderCancelRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgOrderCancelRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgOrderCancelRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SessionID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Header == nil {
				m.Header = &Header{}
			}
			if err := m.Header.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrigClOrdID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrigClOrdID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClOrdID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClOrdID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Trailer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Trailer == nil {
				m.Trailer = &Trailer{}
			}
			if err := m.Trailer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgOrderCancelRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgOrderCancelRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgOrderCancelRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgOrderCancelReject) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgOrderCancelReject: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgOrderCancelReject: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SessionID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Header == nil {
				m.Header = &Header{}
			}
			if err := m.Header.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrderID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrigClOrdID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrigClOrdID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClOrdID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClOrdID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CxlRejReason", wireType)
			}
			m.CxlRejReason = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CxlRejReason |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CxlRejResponseTo", wireType)
			}
			m.CxlRejResponseTo = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CxlRejResponseTo |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TransactTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TransactTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Trailer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Trailer == nil {
				m.Trailer = &Trailer{}
			}
			if err := m.Trailer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgOrderCancelRejectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgOrderCancelRejectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgOrderCancelRejectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgOrderExecutionReport) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgOrderExecutionReport: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgOrderExecutionReport: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SessionID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Header", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Header == nil {
				m.Header = &Header{}
			}
			if err := m.Header.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClOrdID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClOrdID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrderID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExecID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExecID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrdStatus", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrdStatus = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExecType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExecType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Symbol", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Symbol = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Side", wireType)
			}
			m.Side = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Side |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderQty", wireType)
			}
			m.OrderQty = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OrderQty |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			m.Price = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Price |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimeInForce", wireType)
			}
			m.TimeInForce = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TimeInForce |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastPx", wireType)
			}
			m.LastPx = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastPx |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastQty", wireType)
			}
			m.LastQty = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastQty |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LeavesQty", wireType)
			}
			m.LeavesQty = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LeavesQty |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CumQty", wireType)
			}
			m.CumQty = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CumQty |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvgPx", wireType)
			}
			m.AvgPx = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AvgPx |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Text = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TransactTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TransactTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Trailer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Trailer == nil {
				m.Trailer = &Trailer{}
			}
			if err := m.Trailer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgOrderExecutionReportResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgOrderExecutionReportResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgOrderExecutionReportResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
